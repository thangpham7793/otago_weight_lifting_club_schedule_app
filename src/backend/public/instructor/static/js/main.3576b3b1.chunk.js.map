{"version":3,"sources":["assets/logo.jpg","app/NavBarControl.js","app/Footer.js","services/auth.js","utils.js","services/http.js","services/validateCredentials.js","services/InstructorServiceSingleton.js","services/LearnerServiceSingleton.js","services/ProgrammeServiceSingleton.js","services/fileReaderPromise.js","services/makeSchedulePayload.js","services/array.js","services/NavHelpers.js","services/processInstruction.js","services/quickStyles.js","app/PageRoutes.js","app/DrawerLinks.js","app/DrawerNavBar.js","app/HorizontalNavBar.js","components/factoryComponent.js","components/ActionNotificationDiv.js","components/learners/LearnerNameList.js","components/learners/PersonalBestsForm.js","components/learners/LearnerSearchInput.js","reducers/learnerSchedulesSlice.js","components/learners/ScheduleOptions.js","components/learners/WeekOptions.js","reducers/learnerPbsSlice.js","reducers/dailyExercisesSlice.js","hooks/useFetchSnackbar.js","components/learners/ExercisePage.js","components/learners/ScheduleSelect.js","components/learners/DayOptions.js","components/learners/DailyExerciseTable.js","components/learners/FeedBackDialog.js","components/learners/PbsDialog.js","components/learners/LearnerPbsForm.js","components/home/InstructorLoginPage.js","components/home/LearnerLoginPage.js","components/home/Logo.js","components/home/LoginFormButton.js","components/home/LoginForm.js","components/home/LoginFields.js","components/home/LoginFormButtonPanel.js","reducers/exerciseNames.js","components/LearnerApp/PracticeBestsPage/ExerciseList.js","reducers/practiceBestsSlice.js","components/LearnerApp/PracticeBestsPage/SingleExerciseRecordList.js","components/LearnerApp/PracticeBestsPage/SingleRecordForm.js","components/LearnerApp/PracticeBestsPage/EditSingleRecordDialog.js","components/LearnerApp/PracticeBestsPage/AddRecordFloatingButton.js","LearnerApp.js","components/learners/LearnerSchedulePage.js","components/LearnerApp/PracticeBestsPage/LearnerPracticeBestsPage.js","components/LearnerApp/PracticeBestsPage/SingleExercisePage.js","components/schedules/myExcelReader.js","hooks/useActionSnackbar.js","components/schedules/ScheduleUploader.js","components/schedules/FileUploader.js","components/schedules/ProgrammeOptions.js","components/schedules/ScheduleReducers.js","components/schedules/SchedulePanel.js","components/schedules/ScheduleCards.js","components/schedules/ScheduleCard.js","components/schedules/AddScheduleFloatingButton.js","components/schedules/AddScheduleFormDialog.js","components/schedules/ReuploadScheduleDialog.js","components/schedules/ScheduleReuploader.js","components/schedules/PublishScheduleDialog.js","components/schedules/ScheduleNameInput.js","InstructorApp.js","components/learners/LearnersPanel.js","components/home/InstructorAccountPage.js","App.js","AppControl.js","app/store.js","index.js"],"names":["module","exports","NavLink","to","label","className","NavBarControl","navLinks","links","onLogOut","onAppChange","pageTitle","useState","window","innerWidth","currentWidth","setCurrentWidth","navBarHeight","setNavBarHeight","ref","useRef","useEffect","saveCurrentWidth","current","scrollHeight","addEventListener","removeEventListener","length","component","filter","display","map","key","onClick","style","zIndex","DrawerNavBar","HorizontalNavBar","Footer","UserAuth","sessionStorage","getItem","token","setItem","removeItem","camelCaseToNormal","camelCaseStr","split","reduce","str","char","index","toUpperCase","catchAsync","asyncFunc","errorHandler","a","console","log","toString","search","ok","payload","message","shallowEqual","obj1","obj2","Object","entries","every","obj1Key","obj1Value","hasOwnProperty","spinner","show","status","document","querySelector","safeSpinnerWrapper","func","res","capitalise","string","substring","HttpServiceSingleton","this","postInstructorCredentials","_fetchPostFactory","_instance","resourceUrl","BASE_URL","timeout","url","_makeUrl","options","method","mode","headers","body","JSON","stringify","isAuthenticated","Authorization","getToken","_setFetchTimeout","fetch","_makePayload","resourceUrlAndId","ctl","AbortController","setTimeout","abort","signal","response","json","asyncFetchFunc","setInterval","location","href","includes","getInstance","isNotEmpty","trim","validateInstructorCredentials","email","password","test","isValidEmail","validateLearnerCredentials","username","validateNewWeight","weight","n","isNaN","parseFloat","isFinite","validateNewRepMax","repMax","Array","fill","element","InstructorServiceSingleton","instructorLogin","credentials","getInstructorInstance","LearnerServiceSingleton","updateLearner","deleteLearner","createLearner","learnerLogin","updateLearnerPbs","createNewPracticeBest","updatePracticeBest","deletePracticeBest","getPracticeBestsByExerciseName","_fetchJsonFactory","selectedLearner","_fetchPutFactory","learner","learnerId","_fetchDeleteFactory","signupInfo","pbs","newPbs","exerciseName","encodeURI","pbId","getLearnerInstance","ProgrammeServiceSingleton","fetchProgrammes","fetchSchedules","fetchScheduleInfo","deleteSchedule","publishSchedule","unpublishSchedule","repostSchedule","postNewSchedule","fetchExercises","fetchExerciseNames","getAvailableProgrammesToPublish","scheduleId","programmeIds","programmeId","week","getProgrammeInstance","fileReaderPromise","file","Promise","resolve","reject","r","FileReader","onload","e","target","result","onerror","readAsArrayBuffer","parseRows","buffer","workbook","XLSX","read","type","rows","SheetNames","forEach","sheetName","XL_row_object","utils","sheet_to_json","Sheets","push","weekCount","makeTimeTable","exercisesArr","aggregate","prevPair","pairs","day","getWeekDayPair","dayInWeek","w","d","acc","instruction","undefined","makeSchedulePayload","scheduleName","isNew","timetable","findIndexAndDelete","val","arr","splice","findIndex","v","NavHelpers","page","currentPage","pbsToExercises","snatch","clean","jerk","cleanAndJerk","backSquat","frontSquat","pushPress","RPEorRIR","calculateRealWeight","pb","part","indexOf","Math","abs","parseInt","toFixed","join","parsePercent","processInstruction","matchedPbValue","keys","k","toLowerCase","replace","getMatchedPbValue","quickStyles","styleObject","makeStyles","PageRoutes","routes","exact","path","getCurrentPage","btn","padding","color","boxShadow","borderRadius","flex","border","drawer","width","drawerPaper","background","navList","paddingTop","marginTop","navItem","navItemText","fontSize","DrawerLinks","classes","open","setOpen","toggleDrawer","state","Icon","icon","Fragment","Divider","ListItem","button","Link","ListItemIcon","ListItemText","primary","IconButton","Menu","Drawer","anchor","onClose","paper","List","useStyles","wrapper","title","fontWeight","Grid","container","item","xs","LinkButton","rest","history","useHistory","Button","ActionNotificationDiv","React","memo","actionStatus","onCloseActionStatusDiv","action","isActionSuccess","visibility","CheckCircleOutlineRounded","ErrorOutlineRounded","LearnerNameList","learners","onLearnerItemClicked","learnerItems","firstName","lastName","learnerid","PersonalBestInput","props","htmlFor","id","name","PersonalBestsForm","onPersonalBestsInputChange","onUpdatePersonalBests","enableEditAndUpdate","canEditAndUpdate","onDeleteLearner","inputs","fieldName","value","onChange","readOnly","opacity","textTransform","onDoubleClick","Edit","disabled","Save","Delete","LearnerSearchInput","searchPhrase","onSearchPhraseChanged","displayedLearners","flexDirection","placeholder","learnerSchedulesSlice","createSlice","initialState","schedules","programmeName","reducers","initSchedules","selectLearnerSchedules","learnerSchedules","actions","theme","formControl","margin","spacing","maxWidth","selectEmpty","ScheduleOptions","onScheduleChecked","selectedSchedule","Typography","items","MenuItem","FormControl","InputLabel","Select","WeekOptions","onWeekSelected","selectedWeek","gap","range","learnerPbsSlice","initPbs","selectLearnerPbs","learnerPbs","dailyExercisesSlice","exercises","prevWeek","prevScheduleId","stale","initDailyExercises","parse","selectDailyExercises","dailyExercises","useFetchSnackbar","resourceName","postFetchAction","isFetchSuccess","setIsFetchSuccess","Component","FetchNotificationDiv","minWidth","alignContent","height","flexWrap","itemWrapper","justifyContent","header","ScheduleSelect","onScheduleSubmitted","md","lg","alignSelf","select","paddingRight","DayOptions","onDaySelected","selectedDay","DailyExerciseTable","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","dialog","content","form","FeedBackDialog","onDialogCloseClicked","Dialog","fullScreen","aria-labelledby","DialogContent","src","DialogActions","backgroundColor","PbsDialog","LearnerPbsForm","TextField","direction","justify","InstructorLoginPage","onInstructorLogIn","setCurrentPage","setCredentials","errorMessage","setErrorMessage","preventDefault","error","httpService","saveToken","minHeight","Logo","LoginForm","onFormSubmitted","onInputChanged","changedField","getAttribute","newValue","c","LearnerLoginPage","onLearnerLogIn","isLearnerLoggedIn","dispatch","useDispatch","require","alt","LoginFormButton","variant","ErrorMessageDiv","marginBottom","onSubmit","LoginFields","LoginFormButtonPanel","fields","InputProps","btns","customClassName","wrap","exerciseNames","ExerciseList","navigateToSingleExercisePage","useCallback","targetExercise","currentTarget","exerciseList","divider","SentimentDissatisfied","FitnessCenter","Date","prototype","addHours","h","setTime","getTime","practiceBestsSlice","setOnePracticeBest","records","addNewRecord","updateOneRecord","targetArr","updatedIndex","lastEdited","toISOString","substr","deleteOneRecord","deletedIndex","SingleExerciseRecordList","onEditClicked","listItemTextPrimary","textAlign","iconBtn","marginLeft","root","pbid","InputEndAdornMent","InputAdornment","position","endAdornment","required","SingleRecordForm","record","onRecordInputChange","buttons","isInputValid","pickHelperText","isValid","toDateString","helperText","FormTitle","fontStyle","overflow","FormButton","formBtn","formBtnLabel","EditSingleRecordDialog","paperScrollPaper","Close","values","some","i","AddRecordFloatingButton","onAddNewRecordBtnClicked","Fab","right","bottom","Add","allLinks","useSelector","setSelectedschedule","setSelectedWeek","isSchedulePicked","setIsSchedulePicked","checkedScheduleId","find","s","isProtected","TodayOutlined","searchBar","listWrapper","maxHeight","setSearchPhrase","displayedExerciseNames","setDisplayedExerciseNames","startAdornment","Search","regex","RegExp","filteredList","filterExerciseNames","ExitToApp","useParams","practiceBests","selectOnePracticeBest","newRecordTemplate","isValidInputTemplate","clickedRecord","setClickedRecord","tempRecord","setTempRecord","openEditRecordDialog","setOpenEditRecordDialog","openAddNewRecordDialog","setOpenAddNewRecordDialog","setIsInputValid","validateNewRecordAndUpdateState","setNewState","currentRecord","newRecord","resetStateAndValidator","memoizedOnEditClicked","clicked","btnName","confirm","fetchRecords","setSelectedDay","openFeedbackDialog","setOpenFeedbackDialog","openPbsDialog","setOpenPbsDialog","tempPbs","setTempPbs","learnerHttpService","programmeHttpService","newTempPbs","instructorApp","LearnerApp","setIsLearnerLoggedIn","setLinks","clearToken","myExcelReader","reader","event","data","code","readAsArrayBufferPromise","useActionSnackbar","serviceMethod","setActionStatus","callDecoratedService","returnedObj","makePayloadObjectWithCustomPropNames","ScheduleUploader","onActionSuccess","programmes","setProgrammes","selectedProgrammeIds","setSelectedProgrammeIds","setScheduleName","callDecoratedUploadService","UploadSnackbar","selectedFile","files","newSchedule","newScheduleInfoObject","makeNewScheduleInfoObject","p","ScheduleNameInput","onClickedScheduleNameChanged","ProgrammeOptions","onProgrammeChecked","checkedProgrammeId","checked","newArr","FileUploader","onFileUploaded","FormHelperText","alignItems","CloudUploadRounded","accept","checkboxes","FormControlLabel","control","Checkbox","FormLabel","FormGroup","ScheduleReducers","prevSchedules","newSchedules","targetIndex","updatedSchedule","targetProgramme","targetSchedule","removedProgrammeIndex","setSchedules","_deleteOneScheduleById","_addNewSchedule","_addPublishedProgramme","_removeProgrammeFromSchedule","_updateScheduleDetails","resetState","currentState","setStateFunc","CustomScheduleCard","ScheduleCard","styleHook","sm","ScheduleCards","unPublishSnackbar","cards","media","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","red","actionBtnWrapper","scheduleActionBtn","attr","isNumber","onEditScheduleClicked","onPublishScheduleClicked","onDeleteScheduleClicked","createdAt","callDecoratedUnpublishService","UnpublishSnackbar","onUnpublishScheduleClicked","Card","CardHeader","subheader","CardContent","programmeid","scheduleid","programmename","CardActions","disableSpacing","Share","AddScheduleFloatingButton","left","top","CloudUpload","AddScheduleFormDialog","handleClose","DialogTitle","ReuploadScheduleDialog","clickedSchedule","currentClickedScheduleName","canUpdate","fileUploaded","callDecoratedRepostService","RepostSnackbar","ScheduleReuploader","isFileUploaded","PublishScheduleDialog","publishActionStatus","callDecoratedPublishService","PublishSnackbar","getAddedProgrammes","input","fontFamily","formLabelRoot","formLabelFocused","InputLabelProps","instructor","clickedScheduleId","setClickedScheduleId","setClickedSchedule","currentScheduleName","setCurrentScheduleName","openReuploadDialog","setOpenReuploadDialog","openPublishDialog","setOpenPublishDialog","setCanUpdate","setBuffer","setIsFileUploaded","callDecoratedDeleteService","DeleteSnackbar","updateSchedulesList","factory","getClickedScheduleId","newName","currentName","isValidLength","checkCanUpdate","setLearners","setDisplayedLearners","setSelectedLearner","setCanEditAndUpdate","FetchLearnersNotificationDiv","FetchNotificationDivFactory","filterLearners","phrase","processedPhrase","startsWith","updateUILearnerList","updatedLearnerIndex","newLearnersList","getUpdatedLearnerIndex","fetchLearners","selected","newSelectedLearner","PeopleAlt","onLogOutClicked","VpnKey","learnerApp","InstructorApp","isInstructorLoggedIn","setIsInstructorLoggedIn","App","createMuiTheme","typography","palette","main","secondary","AppControl","ThemeProvider","targetPage","currentApp","configureStore","reducer","learnerSchedulesReducer","learnerPbsReducer","dailyExercisesReducer","practiceBestsReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.3576b3b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.226e3c4c.jpg\";","import React, { useState, useEffect, useRef } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { HorizontalNavBar, DrawerNavBar } from \"./register\"\n\nfunction NavLink({ to, label }) {\n  return (\n    <Link to={to} className=\"nav-item\">\n      {label}\n    </Link>\n  )\n}\n\n//https://reactrouter.com/web/api/Redirect\nexport function NavBarControl({ links, onLogOut, onAppChange, pageTitle }) {\n  let navLinks\n\n  const [currentWidth, setCurrentWidth] = useState(window.innerWidth)\n  const [navBarHeight, setNavBarHeight] = useState(0)\n\n  const ref = useRef()\n\n  useEffect(() => {\n    function saveCurrentWidth() {\n      setCurrentWidth(window.innerWidth)\n    }\n\n    function saveNavBarHeight() {\n      setNavBarHeight(ref.current.scrollHeight)\n    }\n\n    saveNavBarHeight()\n\n    window.addEventListener(\"resize\", saveCurrentWidth)\n\n    return () => {\n      window.removeEventListener(\"resize\", saveCurrentWidth)\n    }\n  }, [currentWidth])\n\n  if (links.length === 1 && !links[0].component) {\n    navLinks = [\n      <span\n        className=\"nav-item\"\n        key={links[0].to}\n        onClick={onAppChange}\n        to={links[0].to}\n      >\n        {links[0].label}\n      </span>,\n    ]\n  } else {\n    navLinks = links\n      .filter(({ display }) => display === true)\n      .map(({ to, label }) => {\n        return to !== \"/logout\" ? (\n          <NavLink key={to} to={to} label={label} />\n        ) : (\n          //basically need to make a fake link here!\n          <span className=\"nav-item\" key={to} label={label} onClick={onLogOut}>\n            {label}\n          </span>\n        )\n      })\n  }\n\n  return (\n    <nav className=\"header index\" ref={ref} style={{ zIndex: 9999 }}>\n      <section>\n        {currentWidth <= 450 && links.length > 1 && navBarHeight > 0 ? (\n          <DrawerNavBar\n            pageTitle={pageTitle}\n            navLinks={navLinks}\n            links={links}\n            onAppChange={onAppChange}\n            onLogOut={onLogOut}\n            navBarHeight={navBarHeight}\n          />\n        ) : (\n          <HorizontalNavBar\n            pageTitle={pageTitle}\n            navLinks={navLinks}\n            links={links}\n            onAppChange={onAppChange}\n            onLogOut={onLogOut}\n          />\n        )}\n      </section>\n    </nav>\n  )\n}\n","import React from \"react\"\n\nexport function Footer() {\n  return (\n    <footer className=\"footer index\" style={{ zIndex: 2 }}>\n      <div className=\"footer-text-wrapper\">\n        Otago Weightlifting 2020. All Rights Reserved\n      </div>\n    </footer>\n  )\n}\n","export class UserAuth {\n  static isAuthenticated() {\n    return sessionStorage.getItem(\"token\") !== null\n  }\n\n  static saveToken(token) {\n    sessionStorage.setItem(\"token\", token)\n  }\n\n  static getToken() {\n    return sessionStorage.getItem(\"token\")\n  }\n\n  static clearToken() {\n    sessionStorage.removeItem(\"token\")\n  }\n}\n","export function camelCaseToNormal(camelCaseStr) {\n  return camelCaseStr.split(\"\").reduce((str, char, index) => {\n    //first letter is uppercased and returned\n    if (index === 0) {\n      return char.toUpperCase()\n    }\n    //if a letter is uppercase, add a space in front\n    if (char === char.toUpperCase()) {\n      return str + \" \" + char\n    } else {\n      return str + char\n    }\n  }, \"\")\n}\n\nexport function normalToCamelCase(normalStr) {\n  return normalStr\n    .split(\" \")\n    .map((word, index) => {\n      //first letter is uppercased and returned\n      if (index === 0) {\n        return word.toLowerCase()\n      } else {\n        return word.substring(0, 1).toUpperCase() + word.substr(1)\n      }\n    })\n    .join(\"\")\n}\n\n//async error handler decorator\nexport function catchAsync(asyncFunc, errorHandler = null) {\n  return async function (...args) {\n    try {\n      return await asyncFunc(...args)\n    } catch (error) {\n      errorHandler?.(error) ?? console.log(`Something went wrong: ${error}`)\n\n      if (error.toString().search(/AbortError/) !== -1) {\n        return { ok: false, payload: { message: `Server timeouts!` } }\n      } else if (error.toString().search(/NetworkError/) !== -1) {\n        return { ok: false, payload: { message: `Can't connect to Server!` } }\n      } else {\n        return { ok: false, payload: null }\n      }\n    }\n  }\n}\n\nexport function shallowEqual(obj1, obj2) {\n  return Object.entries(obj1).every(([obj1Key, obj1Value]) => {\n    return obj2.hasOwnProperty(obj1Key) && obj1Value === obj2[obj1Key]\n  })\n}\n\nexport const spinner = (function () {\n  function show(status) {\n    if (status === true) {\n      document.querySelector(\"#spinner\").style.display = \"block\"\n    } else {\n      document.querySelector(\"#spinner\").style.display = \"none\"\n    }\n  }\n  return { show }\n})()\n\nexport function safeSpinnerWrapper(func) {\n  return async function (...args) {\n    spinner.show(true)\n    const res = await catchAsync(func)(...args)\n    spinner.show(false)\n    return res\n  }\n}\n\nexport function capitalise(string) {\n  return string.substring(0, 1).toUpperCase() + string.substring(1)\n}\n\n//starting from 1!\nexport function range(length, gap = 1) {\n  return Array(length)\n    .fill()\n    .map((element, index) => index + gap)\n}\n\n//\nexport function repMaxrange(length) {\n  return Array(length)\n    .fill()\n    .map((element, index) => `x${index + 1}`)\n}\n","import { catchAsync } from \"../utils\"\nimport { UserAuth } from \"./auth\"\n\n//https://dmitripavlutin.com/javascript-fetch-async-await/\nexport class HttpServiceSingleton {\n  //TODO: these methods can be refactored into their own service class as well\n  constructor() {\n    //hide away implementation details from the client components\n    this.postInstructorCredentials = HttpServiceSingleton._fetchPostFactory(\n      \"instructor/login\"\n    )\n    //make sure that only an instance is created\n    this._instance = this\n    if (HttpServiceSingleton._instance) {\n      return this._instance\n    }\n  }\n\n  static BASE_URL = (function () {\n    const PROD = \"https://lifting-schedule-v2.herokuapp.com\"\n    const DEV = \"http://localhost:5000\"\n\n    return window.location.href.split(\".\").includes(\"herokuapp\") ? PROD : DEV\n  })()\n\n  static _makeUrl(resourceUrl) {\n    return `${this.BASE_URL}/${resourceUrl}`\n  }\n\n  //factory functions that makes use of closure\n  static _fetchPostFactory(resourceUrl, timeout = 10) {\n    const url = HttpServiceSingleton._makeUrl(resourceUrl)\n    return catchAsync(async function (payload) {\n      const options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      }\n\n      if (UserAuth.isAuthenticated()) {\n        options.headers.Authorization = `Bearer ${UserAuth.getToken()}`\n      }\n\n      HttpServiceSingleton._setFetchTimeout(timeout, options)\n      return HttpServiceSingleton._makePayload(await fetch(url, options))\n    })\n  }\n\n  static _fetchPutFactory(resourceUrl, timeout = 10) {\n    const url = HttpServiceSingleton._makeUrl(resourceUrl)\n    return catchAsync(async function (payload = null) {\n      const options = {\n        method: \"PUT\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${UserAuth.getToken()}`,\n        },\n      }\n\n      if (payload) {\n        options.body = JSON.stringify(payload)\n      }\n\n      HttpServiceSingleton._setFetchTimeout(timeout, options)\n\n      return HttpServiceSingleton._makePayload(await fetch(url, options))\n    })\n  }\n\n  static _fetchJsonFactory(resourceUrl, timeout = 10) {\n    const url = HttpServiceSingleton._makeUrl(resourceUrl)\n    return catchAsync(async function () {\n      const options = {\n        headers: {\n          Authorization: `Bearer ${UserAuth.getToken()}`,\n        },\n      }\n\n      HttpServiceSingleton._setFetchTimeout(timeout, options)\n\n      return HttpServiceSingleton._makePayload(await fetch(url, options))\n    })\n  }\n\n  static _fetchDeleteFactory(resourceUrlAndId, timeout = 10) {\n    const url = HttpServiceSingleton._makeUrl(resourceUrlAndId)\n    return catchAsync(async function () {\n      const options = {\n        method: \"DELETE\",\n        mode: \"cors\",\n        headers: {\n          Authorization: `Bearer ${UserAuth.getToken()}`,\n        },\n      }\n\n      HttpServiceSingleton._setFetchTimeout(timeout, options)\n\n      return HttpServiceSingleton._makePayload(await fetch(url, options))\n    })\n  }\n\n  static _setFetchTimeout(timeout, options) {\n    const ctl = new AbortController()\n    setTimeout(() => ctl.abort(), timeout * 1000)\n    options.signal = ctl.signal\n  }\n\n  static async _makePayload(response) {\n    if (!response) {\n      return { ok: false, payload: null }\n    }\n\n    const ok = response.ok\n\n    //FIXME: may need to switch based on status code!\n    switch (response.status) {\n      case 204:\n        console.log(\"No Content\")\n        return { ok, payload: null }\n      default:\n        break\n    }\n    const payload = await response.json()\n    console.log({ ok, payload })\n    return { ok, payload: payload ? payload : null }\n  }\n\n  //FIXME: how to implement retry?\n  static _retryFetch(asyncFetchFunc) {\n    setInterval(async () => {\n      console.log(\"Refetching ...\")\n      return catchAsync(asyncFetchFunc())\n    }, 5000)\n  }\n\n  static getInstance() {\n    return HttpServiceSingleton._instance || new HttpServiceSingleton()\n  }\n}\n\n//only export an instance (singleton)\nexport default HttpServiceSingleton.getInstance()\n","import { repMaxrange } from \"../utils\"\n\nfunction isNotEmpty(str) {\n  return str && str.trim().length > 0\n}\n\nfunction isValidEmail(email) {\n  const pattern = /^([\\w_-]+|[\\w_-]+(.[\\w_-]+)+?)@([\\w_-]+|[\\w_-]+(.[\\w_-]+)+?)$/\n  return email && pattern.test(email)\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function validateInstructorCredentials({ email, password }) {\n  if (isNotEmpty(email) && isNotEmpty(password)) {\n    return isValidEmail(email) ? null : \"Invalid email\"\n  } else {\n    return \"Missing Email or Password\"\n  }\n}\n\nexport function validateLearnerCredentials({ username, password }) {\n  return isNotEmpty(username) && isNotEmpty(password)\n    ? null\n    : \"Missing Email or Password\"\n}\n\nexport function validateNewWeight(weight) {\n  return isNotEmpty(weight) && isNumber(weight) && parseFloat(weight) > 0\n}\n\nexport function validateNewRepMax(repMax) {\n  return repMaxrange(10).includes(repMax)\n}\n","import { HttpServiceSingleton } from \"./http\"\nimport { safeSpinnerWrapper } from \"../utils\"\n\nexport class InstructorServiceSingleton extends HttpServiceSingleton {\n  constructor() {\n    super()\n    this.instructorLogin = safeSpinnerWrapper(this.instructorLogin)\n    this._instance = this\n    if (InstructorServiceSingleton._instance) {\n      return this._instance\n    }\n  }\n\n  static getInstructorInstance() {\n    return (\n      InstructorServiceSingleton._instance || new InstructorServiceSingleton()\n    )\n  }\n\n  async instructorLogin(credentials) {\n    return await InstructorServiceSingleton._fetchPostFactory(\n      \"instructor/login\"\n    )(credentials)\n  }\n}\n\nexport default InstructorServiceSingleton.getInstructorInstance()\n","import { HttpServiceSingleton } from \"./http\"\nimport { safeSpinnerWrapper } from \"../utils\"\n\nexport class LearnerServiceSingleton extends HttpServiceSingleton {\n  constructor() {\n    super()\n    console.log(\"New LearnerServiceSingleton!\")\n    this.updateLearner = safeSpinnerWrapper(this.updateLearner)\n    this.deleteLearner = safeSpinnerWrapper(this.deleteLearner)\n    this.createLearner = safeSpinnerWrapper(this.createLearner)\n    this.learnerLogin = safeSpinnerWrapper(this.learnerLogin)\n    this.updateLearnerPbs = safeSpinnerWrapper(this.updateLearnerPbs)\n    this.createNewPracticeBest = safeSpinnerWrapper(this.createNewPracticeBest)\n    this.updatePracticeBest = safeSpinnerWrapper(this.updatePracticeBest)\n    this.deletePracticeBest = safeSpinnerWrapper(this.deletePracticeBest)\n\n    this.getPracticeBestsByExerciseName = safeSpinnerWrapper(\n      this.getPracticeBestsByExerciseName\n    )\n\n    this._instance = this\n\n    if (LearnerServiceSingleton._instance) {\n      return this._instance\n    }\n  }\n\n  async fetchLearners() {\n    console.log(`Fetching Learners`)\n    return await LearnerServiceSingleton._fetchJsonFactory(\"learners\")()\n  }\n\n  async updateLearner(selectedLearner) {\n    console.log(`Sending ${JSON.stringify(selectedLearner)}`)\n    return await LearnerServiceSingleton._fetchPutFactory(\"learners/details\")({\n      learner: selectedLearner,\n    })\n  }\n\n  async deleteLearner(learnerId) {\n    console.log(\"Delete learner id \", learnerId)\n    return await LearnerServiceSingleton._fetchDeleteFactory(\n      `learners/${learnerId}`\n    )()\n  }\n\n  async createLearner(learner) {\n    console.log(`Sending new learner ${JSON.stringify(learner)}`)\n    return await LearnerServiceSingleton._fetchPostFactory(\"learners\")({\n      learner: learner,\n    })\n  }\n\n  async learnerLogin(credentials) {\n    return await LearnerServiceSingleton._fetchPostFactory(\"learners/login\")(\n      credentials\n    )\n  }\n\n  //expected payload: {firstName, lastName, email, programmeId}\n  async learnerSignup(signupInfo) {\n    return await LearnerServiceSingleton._fetchPostFactory(\"learners/signup\")(\n      signupInfo\n    )\n  }\n\n  //pbs => {exerciseName: number, ...}\n  async updateLearnerPbs(pbs) {\n    return await LearnerServiceSingleton._fetchPutFactory(\"learners/pbs\")({\n      newPbs: pbs,\n    })\n  }\n\n  async createNewPracticeBest({ exerciseName, repMax, weight }) {\n    return await LearnerServiceSingleton._fetchPostFactory(\n      \"learners/practice.bests\"\n    )({ exerciseName, repMax, weight })\n  }\n\n  async getPracticeBestsByExerciseName(exerciseName) {\n    return await LearnerServiceSingleton._fetchJsonFactory(\n      `learners/practice.bests/${encodeURI(exerciseName)}`\n    )()\n  }\n\n  async updatePracticeBest({ pbId, weight, repMax }) {\n    return await LearnerServiceSingleton._fetchPutFactory(\n      \"learners/practice.bests\"\n    )({ pbId, weight, repMax })\n  }\n\n  async deletePracticeBest({ pbId }) {\n    console.log(`Deleting record id ${pbId}`)\n    return await LearnerServiceSingleton._fetchDeleteFactory(\n      `learners/practice.bests/${pbId}`\n    )()\n  }\n\n  static getLearnerInstance() {\n    return LearnerServiceSingleton._instance || new LearnerServiceSingleton()\n  }\n}\n\nexport default LearnerServiceSingleton.getLearnerInstance()\n","import { HttpServiceSingleton } from \"./http\"\nimport { safeSpinnerWrapper } from \"../utils\"\n\nexport class ProgrammeServiceSingleton extends HttpServiceSingleton {\n  constructor() {\n    super()\n    console.log(\"I was created!\")\n    //TODO: have all components use hooks to move wrapper there\n    this.fetchProgrammes = safeSpinnerWrapper(this.fetchProgrammes)\n    this.fetchSchedules = safeSpinnerWrapper(this.fetchSchedules)\n    this.fetchScheduleInfo = safeSpinnerWrapper(this.fetchScheduleInfo)\n    this.deleteSchedule = safeSpinnerWrapper(this.deleteSchedule)\n    this.publishSchedule = safeSpinnerWrapper(this.publishSchedule)\n    this.unpublishSchedule = safeSpinnerWrapper(this.unpublishSchedule)\n    this.repostSchedule = safeSpinnerWrapper(this.repostSchedule)\n    this.postNewSchedule = safeSpinnerWrapper(this.postNewSchedule)\n    this.fetchExercises = safeSpinnerWrapper(this.fetchExercises)\n    this.fetchExerciseNames = safeSpinnerWrapper(this.fetchExerciseNames)\n    this.getAvailableProgrammesToPublish = safeSpinnerWrapper(\n      this.getAvailableProgrammesToPublish\n    )\n\n    this._instance = this\n    if (ProgrammeServiceSingleton._instance) {\n      return this._instance\n    }\n  }\n\n  //programmes (for signup)\n  async fetchProgrammes() {\n    return await ProgrammeServiceSingleton._fetchJsonFactory(\"programmes\")()\n  }\n\n  async createProgramme() {}\n  async updateProgramme() {}\n\n  //schedules\n  async fetchSchedules() {\n    return await ProgrammeServiceSingleton._fetchJsonFactory(\n      \"programmes/schedules\"\n    )()\n  }\n\n  async deleteSchedule(scheduleId) {\n    return await ProgrammeServiceSingleton._fetchDeleteFactory(\n      `programmes/schedules/${scheduleId}`\n    )()\n  }\n\n  async postNewSchedule(payload) {\n    return await ProgrammeServiceSingleton._fetchPostFactory(\n      \"programmes/schedules\"\n    )(payload)\n  }\n\n  async repostSchedule(payload) {\n    return await ProgrammeServiceSingleton._fetchPutFactory(\n      \"programmes/schedules\"\n    )(payload)\n  }\n\n  async fetchScheduleInfo() {\n    return await ProgrammeServiceSingleton._fetchJsonFactory(\n      \"programmes/schedules/info\"\n    )()\n  }\n  //schedule and programme\n  async getAvailableProgrammesToPublish(scheduleId) {\n    return await ProgrammeServiceSingleton._fetchJsonFactory(\n      `programmes/schedules/${scheduleId}/publish/available.programmes`\n    )()\n  }\n\n  //TODO: can use req.params as well no need to serialize\n  async publishSchedule(scheduleId, programmeIds) {\n    return await ProgrammeServiceSingleton._fetchPostFactory(\n      `programmes/schedules/${scheduleId}/publish`\n    )({ programmeIds })\n  }\n\n  async unpublishSchedule(scheduleId, programmeId) {\n    console.log(programmeId)\n    return await ProgrammeServiceSingleton._fetchDeleteFactory(\n      `programmes/schedules/${scheduleId}/unpublish/${programmeId}`\n    )()\n  }\n\n  //fetch weekly schedules {scheduleId, week}\n  async fetchExercises(scheduleId, week) {\n    return await ProgrammeServiceSingleton._fetchJsonFactory(\n      `programmes/schedules/${scheduleId}/weeks/${week}`\n    )()\n  }\n\n  //fetch weekly schedules {scheduleId, week}\n  async fetchExerciseNames() {\n    return await ProgrammeServiceSingleton._fetchJsonFactory(\n      `programmes/exercises`\n    )()\n  }\n\n  static getProgrammeInstance() {\n    return (\n      ProgrammeServiceSingleton._instance || new ProgrammeServiceSingleton()\n    )\n  }\n}\n\nexport default ProgrammeServiceSingleton.getProgrammeInstance()\n","export function fileReaderPromise(file) {\n  return new Promise((resolve, reject) => {\n    let r = new FileReader()\n    r.onload = (e) => resolve(e.target.result)\n    r.onerror = reject\n    r.readAsArrayBuffer(file)\n  })\n}\n","import XLSX from \"xlsx\"\n\nfunction parseRows(buffer) {\n  const workbook = XLSX.read(buffer, {\n    type: \"buffer\",\n  })\n\n  const rows = []\n\n  workbook.SheetNames.forEach(function (sheetName) {\n    //which is actually an array of rows\n    const XL_row_object = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName])\n    rows.push(...XL_row_object)\n  })\n\n  return { rows, weekCount: workbook.SheetNames.length }\n}\n\nfunction makeTimeTable(exercisesArr) {\n  const aggregate = {}\n\n  function getWeekDayPair(exercisesArr) {\n    let prevPair = [0, 0]\n    return exercisesArr.reduce((pairs, { week, day }) => {\n      if (prevPair[0] !== week || prevPair[1] !== day) {\n        prevPair = [week, day]\n        pairs.push([week, day])\n      }\n      return pairs\n    }, [])\n  }\n\n  function extractDailyExercises(w, d) {\n    exercisesArr\n      .filter(({ week, day }) => week === w && day === d)\n      .reduce((acc, { exerciseName, instruction }) => {\n        //initialise prop week if not exist\n        if (acc[`week ${w}`] === undefined) {\n          acc[`week ${w}`] = {}\n        }\n\n        //initialise prop day of week if not exist\n        if (acc[`week ${w}`][`day ${d}`] === undefined) {\n          acc[`week ${w}`][`day ${d}`] = []\n        }\n\n        //push obj to proper week and day\n        acc[`week ${w}`][`day ${d}`].push({ exerciseName, instruction })\n\n        return acc\n      }, aggregate)\n  }\n\n  getWeekDayPair(exercisesArr).forEach((dayInWeek) =>\n    extractDailyExercises(dayInWeek[0], dayInWeek[1])\n  )\n  return aggregate\n}\n\nexport function makeSchedulePayload(\n  buffer,\n  programmeIds,\n  scheduleName,\n  isNew = true,\n  scheduleId = null\n) {\n  //if a file is uploaded\n  if (buffer) {\n    const { rows, weekCount } = parseRows(buffer)\n    const timetable = makeTimeTable(rows)\n    //a new schedule\n    if (isNew) {\n      return {\n        timetable,\n        weekCount,\n        scheduleName,\n        programmeIds,\n      }\n      //reposting the schedule\n    } else {\n      return {\n        scheduleId,\n        scheduleName,\n        weekCount,\n        timetable,\n      }\n    }\n    //if no file is uploaded, meaning there's a name change\n  } else {\n    return {\n      scheduleId,\n      scheduleName,\n    }\n  }\n}\n","export function findIndexAndDelete(val, arr) {\n  arr.splice(\n    arr.findIndex((v) => v === val),\n    1\n  )\n}\n","export class NavHelpers {\n  static setCurrentPage(page) {\n    if (page) {\n      sessionStorage.setItem(\"currentPage\", page)\n      return\n    }\n  }\n\n  static getCurrentPage() {\n    let currentPage = sessionStorage.getItem(\"currentPage\")\n    //redirects from login page if authenticated\n    if (currentPage === \"/instructor\") {\n      return \"/instructor/schedules\"\n    }\n    if (currentPage === \"/learner\") {\n      return \"/learner/schedules\"\n    } else {\n      return currentPage\n    }\n  }\n\n  static clearCurrentPage() {\n    return sessionStorage.removeItem(\"currentPage\")\n  }\n}\n","const pbsToExercises = {\n  snatch: [\n    \"Snatch\",\n    \"Power Snatch\",\n    \"Hang Snatch\",\n    \"High Hang Snatch\",\n    \"Hang Snatch Below Knee\",\n    \"Hang Power Snatch Below Knee\",\n    \"Hang Snatch Just Off the Floor\",\n    \"Hang Power Snatch\",\n    \"Block Snatch\",\n    \"Low Block Snatch\",\n    \"Block Power Snatch\",\n    \"Low Block Power Snatch\",\n    \"Muscle Snatch\",\n    \"Deficit Snatch\",\n    \"Snatch Balance\",\n    \"Overhead Squat\",\n    \"Snatch Pull\",\n    \"Snatch Deadlift\",\n    \"Block Snatch Pull\",\n    \"Snatch Romanian Deadlift\",\n    \"Snatch Push Press\",\n    \"3 Position Snatch\",\n    \"3 position snatch (High Hang, Below Knee, Floor)\",\n    \"2 Position Snatch\",\n    \"Pause Snatch\",\n    \"Snatch Pull + Snatch\",\n    \"Snatch + Overhead Squat\",\n    \"Snatch Push Press + Overhead Squat\",\n    \"Deficit Snatch Pull\",\n    \"Snatch Panda Pull\",\n  ],\n  clean: [\n    \"Clean\",\n    \"Power Clean\",\n    \"Hang Clean\",\n    \"High Hang Clean\",\n    \"Hang Snatch Below Knee\",\n    \"Hang Clean Just Off the Floor\",\n    \"Hang Power Clean\",\n    \"Hang Power Clean Below Knee\",\n    \"Block Clean\",\n    \"Low Block Clean\",\n    \"Block Power Clean\",\n    \"Low Block Power Clean\",\n    \"Muscle Clean\",\n    \"Deficit Clean\",\n    \"Clean Pull\",\n    \"Clean Deadlift\",\n    \"Block Clean Pull\",\n    \"Clean Romanian Deadlift\",\n    \"3 Position Clean\",\n    \"2 Position Snatch\",\n    \"Pause Clean\",\n    \"Clean Pull + Clean\",\n    \"Clean + Front Squat\",\n    \"Deficit Clean Pull\",\n    \"Power Clean + Push Press\",\n  ],\n  jerk: [\n    \"Jerk\",\n    \"Split Jerk\",\n    \"Power Jerk\",\n    \"Front Squat + Jerk\",\n    \"Power Jerk + Split Jerk\", //FIXME: how to deal with \"+\", some exercises are combos, some are not on the standard list. Maybe he should be able to update the list/add remove items from the list\n  ],\n  cleanAndJerk: [\n    \"Clean + Jerk\",\n    \"Clean + Front Squat + Jerk\",\n    \"Power Clean + Split Jerk\",\n    \"Power Clean + Power Jerk\",\n    \"Clean and Jerk\",\n  ],\n  backSquat: [\n    \"Back Squat\",\n    \"Pause Back Squat\",\n    \"Good Morning\",\n    \"Barbell Back Squat Jumps\",\n  ],\n  frontSquat: [\"Front Squat\", \"Pause Front Squat\"],\n  pushPress: [\"Push Press\"],\n  RPEorRIR: [\n    \"Pushups\",\n    \"Pullups\",\n    \"Back Extension\",\n    \"Situps\",\n    \"Cable Row\",\n    \"Bench Press\",\n    \"Box Jumps\",\n    \"Bent Over Barbell Row\",\n    \"Pendlay Row\",\n    \"Barbell Bicep Curl\",\n    \"Dips\",\n    \"Barbell Strict Press\",\n    \"Lu Xiaojun Raise\",\n    \"Bent Over Plate Rear Delt Flye\",\n    \"Abs (your choice)\",\n    \"Hanging Knee/Leg Raise\",\n    \"Calf Raise\",\n    \"1-Arm Dumbbell Row\",\n    \"Bulgarian Split Squat\",\n    \"Seated Barbell Press\",\n    \"Seated Dumbbell Press\",\n  ],\n}\n\nfunction getMatchedPbValue(exerciseName, pbs) {\n  const matchedPb = Object.keys(pbsToExercises).filter((k) => {\n    //console.log(exercise)\n    return pbsToExercises[k]\n      .map((exerciseName) => exerciseName.toLowerCase())\n      .includes(exerciseName.toLowerCase().replace(\"optional: \", \"\"))\n  })[0]\n  return pbs[matchedPb]\n}\n\nfunction calculateRealWeight(str, pb) {\n  function parsePercent(str, pb) {\n    const elements = str.split(\"-\").filter((str) => str !== \"\")\n    const result = elements\n      .map((str) => {\n        const percent = Math.abs(parseInt(str))\n        return ((percent * pb) / 100).toFixed() + \"kg\"\n      })\n      .join(\"-\")\n    return `${result} (${str})`\n  }\n\n  const result = str\n    .split(\" \")\n    .map((part) => {\n      if (part.indexOf(\"%\") > -1) {\n        return parsePercent(part, pb)\n      } else {\n        return part\n      }\n    })\n    .join(\" \")\n\n  return result\n}\n\nexport function processInstruction({ exerciseName, instruction }, pbs) {\n  const matchedPbValue = getMatchedPbValue(exerciseName, pbs)\n  //convert to % if there's a matched PB, otherwise return the instruction\n  return matchedPbValue\n    ? calculateRealWeight(instruction, matchedPbValue)\n    : instruction\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\n\nexport function quickStyles(styleObject) {\n  return makeStyles(() => styleObject)()\n}\n","import React from \"react\"\n// import { ProtectedRoute } from \"./register\"\nimport { Route, Redirect, Switch } from \"react-router-dom\"\nimport { NavHelpers } from \"../services/register\"\n\n//isProtected ? <ProtectedRoute {...props} /> :\n\n// function PageRoute({ isProtected, ...props }) {\n//   return <Route {...props} />\n// }\n\nexport function PageRoutes({ links }) {\n  const routes = links.map(({ to, component }) => {\n    return <Route key={to} exact path={to} component={component} />\n  })\n\n  return (\n    <Switch>\n      {routes}\n      <Redirect\n        to={\n          NavHelpers.getCurrentPage()\n            ? NavHelpers.getCurrentPage()\n            : \"/learner/login\"\n        }\n      />\n    </Switch>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  Drawer,\n  IconButton,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from \"@material-ui/core\"\nimport { Menu } from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Link } from \"react-router-dom\"\nimport { quickStyles } from \"../services/register\"\n\nconst useStyles = makeStyles(() => ({\n  btn: {\n    padding: \"0 0.25rem\",\n    color: \"var(--txt-cl)\",\n    boxShadow: \"none\",\n    borderRadius: \"0\",\n    flex: \"0\",\n    border: \"none\",\n  },\n  drawer: {\n    width: \"max-content\",\n  },\n  drawerPaper: {\n    background: \"var(--secondary-cl)\",\n    width: \"70vw\",\n  },\n  navList: {\n    paddingTop: 0,\n    marginTop: `3.5rem`,\n  },\n  navItem: {\n    \"& :hover\": {\n      color: \"var(--txt-cl)\",\n    },\n    \"& :focus\": {\n      color: \"var(--txt-cl)\",\n    },\n  },\n  navItemText: {\n    fontSize: \"0.75rem\",\n  },\n}))\n\nexport function DrawerLinks({ links, onLogOut, navBarHeight }) {\n  const classes = quickStyles({\n    btn: {\n      padding: \"0 0.25rem\",\n      color: \"var(--txt-cl)\",\n      boxShadow: \"none\",\n      borderRadius: \"0\",\n      flex: \"0\",\n      border: \"none\",\n    },\n    drawer: {\n      width: \"max-content\",\n    },\n    drawerPaper: {\n      background: \"var(--secondary-cl)\",\n      width: \"70vw\",\n    },\n    navList: {\n      paddingTop: 0,\n      marginTop: navBarHeight ? `${parseInt(navBarHeight) + 20}px` : \"3.5rem\",\n    },\n    navItem: {\n      \"& :hover\": {\n        color: \"var(--txt-cl)\",\n      },\n      \"& :focus\": {\n        color: \"var(--txt-cl)\",\n      },\n    },\n    navItemText: {\n      fontSize: \"0.75rem\",\n    },\n  })\n\n  const [open, setOpen] = useState(false)\n\n  function toggleDrawer(state) {\n    setOpen(state)\n  }\n\n  const navLinks = links\n    .filter(({ display }) => display === true)\n    .map(({ to, label, icon }) => {\n      const Icon = icon\n      return to !== \"/logout\" ? (\n        <React.Fragment key={to}>\n          {\" \"}\n          <Divider />\n          <ListItem\n            button\n            component={Link}\n            to={to}\n            onClick={() => toggleDrawer(false)}\n            className={classes.navItem}\n          >\n            <ListItemIcon>\n              <Icon />\n            </ListItemIcon>\n            <ListItemText\n              primary={label}\n              classes={{ primary: classes.navItemText }}\n            />\n          </ListItem>\n        </React.Fragment>\n      ) : (\n        //basically need to make a fake link here!\n        <React.Fragment key={to}>\n          <Divider />\n          <ListItem button className={classes.navItem}>\n            <ListItemIcon>\n              <Icon />\n            </ListItemIcon>\n            <ListItemText\n              primary={label}\n              onClick={onLogOut}\n              classes={{ primary: classes.navItemText }}\n            />\n          </ListItem>\n          <Divider />\n        </React.Fragment>\n      )\n    })\n\n  return (\n    <>\n      <IconButton className={classes.btn} onClick={() => toggleDrawer(!open)}>\n        <Menu />\n      </IconButton>\n      <Drawer\n        className={classes.drawer}\n        anchor=\"left\"\n        open={open}\n        onClose={() => toggleDrawer(false)}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <List className={classes.navList}>{navLinks}</List>\n      </Drawer>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { DrawerLinks } from \"./DrawerLinks\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n  wrapper: {\n    padding: \"0 0.25rem\",\n  },\n  title: {\n    fontWeight: \"var(--fw-lg)\",\n    fontSize: \"calc(0.35 * var(--fs-md))\",\n  },\n}))\n\nexport function DrawerNavBar({ pageTitle, links, onLogOut }) {\n  const classes = useStyles()\n\n  return (\n    <header>\n      <Grid container className={classes.wrapper}>\n        <Grid item className=\"navLinks\" xs={1}>\n          <DrawerLinks links={links} onLogOut={onLogOut} />\n        </Grid>\n        <Grid item xs={11}>\n          <h1 className={classes.title}>{pageTitle}</h1>\n        </Grid>\n      </Grid>\n    </header>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport function HorizontalNavBar({ pageTitle, links, onAppChange, onLogOut }) {\n  let navLinks\n\n  if (links.length === 1 && !links[0].component) {\n    navLinks = [\n      <span\n        className=\"nav-item\"\n        key={links[0].to}\n        onClick={onAppChange}\n        to={links[0].to}\n      >\n        {links[0].label}\n      </span>,\n    ]\n  } else {\n    navLinks = links\n      .filter(({ display }) => display === true)\n      .map(({ to, label }) => {\n        return to !== \"/logout\" ? (\n          <Link key={to} to={to} className=\"nav-item\">\n            {label}\n          </Link>\n        ) : (\n          //basically need to make a fake link here!\n          <span className=\"nav-item\" key={to} label={label} onClick={onLogOut}>\n            {label}\n          </span>\n        )\n      })\n  }\n\n  return (\n    <div className=\"navContent\">\n      <header>\n        <h1\n          style={{\n            fontWeight: \"var(--fw-lg)\",\n            fontSize: \"calc(0.35 * var(--fs-md))\",\n          }}\n        >\n          {pageTitle}\n        </h1>\n        <div className=\"navLinks\">{navLinks}</div>\n      </header>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Grid, Button } from \"@material-ui/core\"\nimport { useHistory } from \"react-router-dom\"\n\nexport function FetchNotificationDivFactory(\n  resourceName = null,\n  postFetchAction = null\n) {\n  return function ({ isFetchSuccess, ...props }) {\n    //NOTE: a factory function for customizing a notification div based on the kind of payload\n    switch (isFetchSuccess) {\n      default:\n        return (\n          <div {...props} style={{ color: \"var(--bg-cl)\" }}>\n            Loading {resourceName ? resourceName : \"data\"} ...\n          </div>\n        )\n      case true:\n        return (\n          <div {...props} style={{ color: \"green\" }}>\n            {postFetchAction ? postFetchAction : \"Finished loading data!\"}\n          </div>\n        )\n      case false:\n        return (\n          <div {...props} style={{ color: \"red\" }}>\n            Failed to load {resourceName ? resourceName : \"data\"}\n          </div>\n        )\n    }\n  }\n}\n\nexport function CustomGridFactory({ sizes, ...rest }) {\n  return (\n    <Grid item {...sizes}>\n      {rest}\n    </Grid>\n  )\n}\n\nexport function LinkButton({ to, label, ...rest }) {\n  const history = useHistory()\n  return (\n    <Button onClick={() => history.push(to)} {...rest}>\n      {label}\n    </Button>\n  )\n}\n","import React from \"react\"\nimport {\n  CheckCircleOutlineRounded,\n  ErrorOutlineRounded,\n} from \"@material-ui/icons\"\n\nexport const ActionNotificationDiv = React.memo(\n  ({ actionStatus, onCloseActionStatusDiv }) => {\n    const { action, isActionSuccess } = actionStatus\n\n    let message = \"Action Status\"\n    let color = \"\"\n    let background = \"\"\n    let visibility = \"\"\n\n    if (!action) {\n      visibility = \"hidden\"\n    } else {\n      switch (isActionSuccess) {\n        default:\n          message = `Applying ${action.toUpperCase()} ...`\n          background = \"yellow\"\n          color = \"#111\"\n          break\n        case true:\n          message = `${action.toUpperCase()} Successful!`\n          color = \"green\"\n          background = \"rgb(107, 236, 172)\"\n          break\n        case false:\n          message = `${action.toUpperCase()} Failed!`\n          color = \"red\"\n          background = \"rgb(241, 162, 142)\"\n          break\n      }\n    }\n\n    return (\n      <div\n        className=\"action-status-div\"\n        style={{\n          visibility: visibility,\n          color,\n          fontWeight: \"600\",\n          background,\n        }}\n      >\n        {isActionSuccess ? (\n          <CheckCircleOutlineRounded />\n        ) : (\n          <ErrorOutlineRounded />\n        )}\n        <span>{message}</span>\n        <span className=\"action-status-close\" onClick={onCloseActionStatusDiv}>\n          X\n        </span>\n      </div>\n    )\n  }\n)\n","import React from \"react\"\n\nexport function LearnerNameList({ learners, onLearnerItemClicked }) {\n  const learnerItems = learners.map(({ learnerId, firstName, lastName }) => {\n    return (\n      <li\n        className=\"learner-name\"\n        key={learnerId} //this cannot be retrieved from getAttribute! need to be spelled lowercase\n        learnerid={learnerId}\n        onClick={onLearnerItemClicked}\n      >{`${firstName} ${lastName}`}</li>\n    )\n  })\n\n  return (\n    <ul>\n      {learners.length === 0 ? (\n        <li className=\"learner-name\">No Learner Found!</li>\n      ) : (\n        learnerItems\n      )}\n    </ul>\n  )\n}\n","import React from \"react\"\nimport { Edit, Delete, Save } from \"@material-ui/icons\"\n\nimport { camelCaseToNormal } from \"../../utils\"\n\nfunction PersonalBestInput({ label, ...props }) {\n  return (\n    <div className=\"pbs-field\">\n      <label htmlFor={props.id || props.name}>{camelCaseToNormal(label)}</label>\n      <input className=\"text-input\" {...props} />\n    </div>\n  )\n}\n\nexport function PersonalBestsForm({\n  selectedLearner = {},\n  onPersonalBestsInputChange,\n  onUpdatePersonalBests,\n  enableEditAndUpdate,\n  canEditAndUpdate,\n  onDeleteLearner,\n}) {\n  //it does changes, but doesn't show on the UI\n  const inputs = Object.keys(selectedLearner).map((fieldName) => {\n    if (fieldName === \"learnerId\") return null\n    return (\n      <PersonalBestInput\n        label={fieldName}\n        name={fieldName}\n        type=\"text\"\n        key={fieldName}\n        value={selectedLearner[fieldName]}\n        onChange={onPersonalBestsInputChange}\n        readOnly={!canEditAndUpdate}\n        style={{ opacity: canEditAndUpdate ? \"1\" : \"0.75\" }}\n      />\n    )\n  })\n\n  //use modal then\n  return (\n    <div className=\"pbs-form-wrapper\">\n      <h3 style={{ textTransform: \"capitalize\" }}>\n        {selectedLearner.firstName}\n      </h3>\n      <form readOnly={!canEditAndUpdate} onDoubleClick={enableEditAndUpdate}>\n        {inputs}\n      </form>\n      <div className=\"pbs-form-btn-wrapper\">\n        <button className=\"pbs-btn\" onClick={enableEditAndUpdate}>\n          <Edit className=\"pbs-btn-icon\" />\n          {!canEditAndUpdate ? \"Enable Edit \" : \"Disable Edit \"}\n        </button>\n        <button\n          className=\"pbs-btn\"\n          onClick={onUpdatePersonalBests}\n          disabled={!canEditAndUpdate}\n        >\n          <Save className=\"pbs-btn-icon\" />\n          {\"Save \"}\n        </button>\n        <button\n          className=\"pbs-btn\"\n          onClick={onDeleteLearner}\n          disabled={!canEditAndUpdate}\n        >\n          <Delete className=\"pbs-btn-icon\" />\n          {\"Delete \"}\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { LearnerNameList } from \"./register\"\n\nexport function LearnerSearchInput({\n  searchPhrase,\n  onSearchPhraseChanged,\n  learners,\n  displayedLearners,\n  onLearnerItemClicked,\n}) {\n  return (\n    <div className=\"learnerListPanel\" style={{ display: \"flex\" }}>\n      <div\n        className=\"searchInputWrapper\"\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        <input\n          className=\"learnerSearchInput\"\n          value={searchPhrase}\n          onChange={onSearchPhraseChanged}\n          placeholder={\n            learners.length === 0 ? \"No Learners Added Yet\" : \"Type to Filter\"\n          }\n          disabled={learners.length === 0 ? true : false}\n        />\n      </div>\n      <div className=\"learnerNameList\">\n        {learners.length === 0 ? (\n          <ul>\n            <li className=\"learner-name\">No Learners Added Yet</li>\n          </ul>\n        ) : (\n          <LearnerNameList\n            learners={displayedLearners}\n            onLearnerItemClicked={onLearnerItemClicked}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  schedules: [\n    {\n      scheduleId: 12,\n      scheduleName: \"October 2020 Peaking Cycle\",\n      weekCount: 6,\n      programmeName: \"Youth and Junior\",\n    },\n    {\n      scheduleId: 6,\n      scheduleName: \"September 2020 Strength\",\n      weekCount: 5,\n      programmeName: \"Youth and Junior\",\n    },\n  ],\n}\n\nexport const learnerSchedulesSlice = createSlice({\n  name: \"learnerschedules\",\n  initialState,\n  reducers: {\n    initSchedules: (state, action) => {\n      state.schedules = [...action.payload]\n    },\n  },\n})\n\n//selector\nexport const selectLearnerSchedules = (state) =>\n  state.learnerSchedules.schedules\n\n//action type\nexport const { initSchedules } = learnerSchedulesSlice.actions\n\n//reducer to register with global store\nexport default learnerSchedulesSlice.reducer\n","import React from \"react\"\nimport {\n  FormControl,\n  Typography,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    maxWidth: \"100%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  label: {\n    fontWeight: \"var(--fw-md)\",\n  },\n}))\n\nexport function ScheduleOptions({\n  schedules,\n  onScheduleChecked,\n  label,\n  selectedSchedule,\n}) {\n  const classes = useStyles()\n\n  if (!schedules)\n    return <Typography component=\"p\">No Cycle Available</Typography>\n\n  const items = schedules.map(({ scheduleName, scheduleId }) => {\n    return (\n      <MenuItem value={scheduleId} key={scheduleId}>\n        {scheduleName}\n      </MenuItem>\n    )\n  })\n\n  return (\n    <FormControl component=\"fieldset\" className={classes.formControl}>\n      <InputLabel id=\"cycle\" className={classes.label}>\n        {label}\n      </InputLabel>\n      <Select value={selectedSchedule.scheduleId} onChange={onScheduleChecked}>\n        {items}\n      </Select>\n    </FormControl>\n  )\n}\n","import React from \"react\"\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { range } from \"../../utils\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    maxWidth: \"100%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}))\n\nexport function WeekOptions({\n  selectedSchedule,\n  onWeekSelected,\n  selectedWeek,\n  label,\n}) {\n  const classes = useStyles()\n\n  if (!selectedSchedule) return null\n\n  const items = range(selectedSchedule.weekCount).map((v) => {\n    return (\n      <MenuItem value={v} key={v}>\n        {v}\n      </MenuItem>\n    )\n  })\n\n  return (\n    <FormControl component=\"fieldset\" className={classes.formControl}>\n      <InputLabel id=\"week\">{label}</InputLabel>\n      <Select value={selectedWeek} onChange={onWeekSelected}>\n        {items}\n      </Select>\n    </FormControl>\n  )\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  pbs: {\n    backSquat: 100,\n    clean: 100,\n    cleanAndJerk: 100,\n    frontSquat: 100,\n    jerk: 100,\n    pushPress: 100,\n    snatch: 100,\n  },\n}\n\nexport const learnerPbsSlice = createSlice({\n  name: \"learnerPbs\",\n  initialState,\n  reducers: {\n    initPbs: (state, action) => {\n      state.pbs = action.payload\n    },\n  },\n})\n\n//selector\nexport const selectLearnerPbs = (state) => state.learnerPbs.pbs\n\n//action type\nexport const { initPbs } = learnerPbsSlice.actions\n\n//reducer to register with global store\nexport default learnerPbsSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  exercises: null,\n  prevWeek: null,\n  prevScheduleId: null,\n  stale: false,\n}\n\nexport const dailyExercisesSlice = createSlice({\n  name: \"dailyExercises\",\n  initialState,\n  reducers: {\n    initDailyExercises: (state, action) => {\n      state.exercises = JSON.parse(action.payload.exercises)\n      state.prevWeek = action.payload.week\n      state.prevScheduleId = action.payload.scheduleId\n    },\n  },\n})\n\n//selector\nexport const selectDailyExercises = (state) => state.dailyExercises\n\n//action type\nexport const { initDailyExercises } = dailyExercisesSlice.actions\n\n//reducer to register with global store\nexport default dailyExercisesSlice.reducer\n","import React, { useState } from \"react\"\n\nexport function useFetchSnackbar(resourceName = null, postFetchAction = null) {\n  const [isFetchSuccess, setIsFetchSuccess] = useState(null)\n\n  const Component = React.memo(({ isFetchSuccess, ...props }) => {\n    //NOTE: a factory function for customizing a notification div based on the kind of payload\n    switch (isFetchSuccess) {\n      default:\n        return (\n          <div {...props} style={{ color: \"var(--bg-cl)\" }}>\n            Fetching {resourceName ? resourceName : \"data\"} ...\n          </div>\n        )\n      case true:\n        return (\n          <div {...props} style={{ color: \"green\" }}>\n            {postFetchAction ? postFetchAction : \"Finished Fetching Data!\"}\n          </div>\n        )\n      case false:\n        return (\n          <div {...props} style={{ color: \"red\" }}>\n            Failed to Fetch {resourceName ? resourceName : \"data\"}. Please retry\n            later.\n          </div>\n        )\n    }\n  })\n\n  function FetchNotificationDiv({ ...props }) {\n    return <Component isFetchSuccess={isFetchSuccess} {...props} />\n  }\n\n  return { isFetchSuccess, setIsFetchSuccess, FetchNotificationDiv }\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { initPbs, selectLearnerPbs } from \"../../reducers/learnerPbsSlice\"\nimport {\n  initDailyExercises,\n  selectDailyExercises,\n} from \"../../reducers/dailyExercisesSlice\"\nimport { useParams } from \"react-router-dom\"\nimport { LinkButton } from \"../factoryComponent\"\nimport { useFetchSnackbar } from \"../../hooks/useFetchSnackbar\"\nimport {\n  DayOptions,\n  DailyExerciseTable,\n  FeedBackDialog,\n  PbsDialog,\n} from \"./register\"\nimport { Grid, Typography, Button } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { shallowEqual } from \"../../utils\"\nimport programmeHttpService from \"../../services/ProgrammeServiceSingleton\"\nimport learnerHttpService from \"../../services/LearnerServiceSingleton\"\n\nconst useStyles = makeStyles(() => ({\n  btn: {\n    fontSize: \"0.5rem\",\n    minWidth: \"max-content\",\n    color: \"var(--txt-cl)\",\n    padding: \"0.5rem\",\n  },\n}))\n\nexport function ExercisePage() {\n  const dispatch = useDispatch()\n  const { scheduleId, week } = useParams()\n  const { prevWeek, prevScheduleId, exercises } = useSelector(\n    selectDailyExercises\n  )\n\n  const [selectedDay, setSelectedDay] = useState(\"day 1\")\n  const [openFeedbackDialog, setOpenFeedbackDialog] = useState(false)\n  const [openPbsDialog, setOpenPbsDialog] = useState(false)\n  // const [pbs, setPbs] = useState(useSelector(selectLearnerPbs))\n  const pbs = useSelector(selectLearnerPbs)\n  const [tempPbs, setTempPbs] = useState(useSelector(selectLearnerPbs))\n\n  const { setIsFetchSuccess, FetchNotificationDiv } = useFetchSnackbar(\n    \"exercises\"\n  )\n\n  function onFeedbackDialogCloseClicked() {\n    setOpenFeedbackDialog(false)\n  }\n\n  function onFeedbackDialogOpenClicked() {\n    setOpenFeedbackDialog(true)\n  }\n\n  async function onPbsDialogCloseClicked() {\n    if (!shallowEqual(pbs, tempPbs)) {\n      //does this auto update UI ? like setState? (yes it does)\n      const { ok } = await learnerHttpService.updateLearnerPbs(tempPbs)\n      if (ok) {\n      }\n    }\n    dispatch(initPbs(tempPbs))\n    setOpenPbsDialog(false)\n  }\n\n  function onPbsDialogOpenClicked() {\n    setOpenPbsDialog(true)\n  }\n\n  function onPersonalBestsInputChange(e) {\n    const changedField = e.target.getAttribute(\"name\")\n    const newValue = e.target.value\n    console.log(changedField)\n    setTempPbs((tempPbs) => {\n      let newTempPbs = { ...tempPbs }\n      newTempPbs[`${changedField}`] = parseFloat(newValue)\n        ? parseFloat(newValue)\n        : 0\n      return newTempPbs\n    })\n  }\n\n  useEffect(() => {\n    async function fetchExercises(scheduleId, week) {\n      //if it's the same week, don't fetch (this logic can be hidden away in asyncThunk)\n      if (prevWeek === week && prevScheduleId === scheduleId) {\n        return\n      }\n      const { ok, payload } = await programmeHttpService.fetchExercises(\n        scheduleId,\n        week\n      )\n      if (ok) {\n        setIsFetchSuccess(true)\n        dispatch(initDailyExercises({ exercises: payload, scheduleId, week }))\n      } else {\n        setIsFetchSuccess(false)\n      }\n    }\n    fetchExercises(scheduleId, week)\n  }, [scheduleId, week, setIsFetchSuccess, prevScheduleId, prevWeek, dispatch])\n\n  function onDaySelected(e) {\n    setSelectedDay(e.target.value)\n  }\n\n  const classes = useStyles()\n\n  return exercises ? (\n    <>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-around\"\n        style={{ height: \"100%\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h6\" component=\"div\">\n            Week {week}\n          </Typography>\n          <DayOptions\n            exercises={exercises}\n            onDaySelected={onDaySelected}\n            selectedDay={selectedDay}\n            label=\"Day\"\n          />\n          <DailyExerciseTable\n            dailyExercises={exercises[selectedDay]}\n            pbs={pbs}\n          />\n        </Grid>\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          wrap=\"nowrap\"\n          style={{ margin: \"1rem auto\", width: \"100%\", padding: \"0 0.25rem\" }}\n        >\n          <Grid item>\n            <LinkButton\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.btn}\n              to=\"/learner/schedules\"\n              label=\"Schedules\"\n            >\n              Schedules\n            </LinkButton>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.btn}\n              onClick={onPbsDialogOpenClicked}\n            >\n              Edit PBs\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.btn}\n              onClick={onFeedbackDialogOpenClicked}\n            >\n              Feedback\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <FeedBackDialog\n        onDialogCloseClicked={onFeedbackDialogCloseClicked}\n        open={openFeedbackDialog}\n      />\n      <PbsDialog\n        onDialogCloseClicked={onPbsDialogCloseClicked}\n        open={openPbsDialog}\n        pbs={tempPbs}\n        onPersonalBestsInputChange={onPersonalBestsInputChange}\n      />\n    </>\n  ) : (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"space-around\"\n      style={{ height: \"100%\" }}\n    >\n      <FetchNotificationDiv />\n    </Grid>\n  )\n}\n","import React from \"react\"\nimport { ScheduleOptions, WeekOptions } from \"./register\"\nimport { Grid, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n  wrapper: {\n    margin: \"0 auto\",\n    display: \"flex\",\n    alignContent: \"space-around\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n  },\n  itemWrapper: {\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"space-around\",\n    justifyContent: \"center\",\n  },\n  header: {\n    fontWeight: \"var(--fw-md)\",\n    fontSize: \"1.25rem\",\n  },\n}))\n\nexport function ScheduleSelect({\n  selectedSchedule,\n  schedules,\n  onScheduleChecked,\n  onScheduleSubmitted,\n  selectedWeek,\n  onWeekSelected,\n}) {\n  const classes = useStyles()\n\n  return (\n    <Grid container className={classes.wrapper}>\n      <Grid item xs={8} md={6} lg={4} className={classes.itemWrapper}>\n        <Typography component=\"header\" className={classes.header}>\n          {selectedSchedule.programmeName}\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={8}\n        md={6}\n        lg={4}\n        className={classes.itemWrapper}\n        style={{ background: \"var(--txt-cl)\" }}\n      >\n        <ScheduleOptions\n          schedules={schedules}\n          onScheduleChecked={onScheduleChecked}\n          label=\"Available Cycles\"\n          selectedSchedule={selectedSchedule}\n        />\n        <WeekOptions\n          onWeekSelected={onWeekSelected}\n          selectedSchedule={selectedSchedule}\n          label=\"Week\"\n          selectedWeek={selectedWeek}\n        />\n      </Grid>\n      <Grid item xs={8} md={6} lg={4} className={classes.itemWrapper}>\n        <button\n          className={`submit-btn`}\n          style={{ width: \"100%\", margin: \"1rem\", alignSelf: \"center\" }}\n          onClick={onScheduleSubmitted}\n        >\n          Let's Go!\n        </button>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from \"react\"\nimport { FormControl, Select, MenuItem, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    maxWidth: \"100%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  select: {\n    paddingRight: theme.spacing(4),\n  },\n}))\n\nexport function DayOptions({ exercises, onDaySelected, selectedDay, label }) {\n  const classes = useStyles()\n\n  if (!exercises)\n    return <Typography component=\"p\">No {label} Available</Typography>\n\n  const items = Object.keys(exercises).map((v) => {\n    return (\n      <MenuItem value={v} key={v}>\n        {v}\n      </MenuItem>\n    )\n  })\n\n  return (\n    <FormControl component=\"fieldset\" className={classes.formControl}>\n      <Select\n        value={selectedDay}\n        onChange={onDaySelected}\n        className={classes.select}\n      >\n        {items}\n      </Select>\n    </FormControl>\n  )\n}\n","import React from \"react\"\nimport { camelCaseToNormal } from \"../../utils\"\nimport { processInstruction } from \"../../services/register\"\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n} from \"@material-ui/core\"\n\nexport function DailyExerciseTable({ dailyExercises, pbs }) {\n  return (\n    <TableContainer>\n      <Table\n        className=\"learner-table\"\n        size=\"small\"\n        aria-label=\"learner-exercise -table\"\n      >\n        <TableHead>\n          <TableRow>\n            {Object.keys(dailyExercises[0]).map((k) => {\n              return (\n                <TableCell\n                  key={k}\n                  className=\"learner-table-cell head\"\n                  align=\"center\"\n                >\n                  {camelCaseToNormal(k)}\n                </TableCell>\n              )\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {dailyExercises.map((e) => (\n            <TableRow key={e.exerciseName} className=\"timetable-row\">\n              <TableCell className=\"learner-table-cell\" align=\"center\">\n                {e.exerciseName}\n              </TableCell>\n              <TableCell className=\"learner-table-cell\" align=\"center\">\n                {processInstruction(e, pbs)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import React from \"react\"\nimport { Dialog, DialogActions, DialogContent } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n  dialog: {\n    width: \"90vw\",\n    height: \"90%\",\n    margin: \"1rem auto\",\n  },\n  content: {\n    background: \"var(--secondary-cl)\",\n    paddingTop: \"0\",\n  },\n  form: {\n    margin: \"11% auto var(--mg-sm)\",\n    width: \"100vw\",\n    height: \"100vh\",\n  },\n}))\n\nexport function FeedBackDialog({ onDialogCloseClicked, open }) {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      fullScreen={true}\n      open={open}\n      onClose={onDialogCloseClicked}\n      aria-labelledby=\"form-dialog-title\"\n      className={classes.dialog}\n    >\n      <DialogContent className={classes.content}>\n        <iframe\n          title=\"learner-feedback-form\"\n          style={{\n            margin: \"11% auto var(--mg-sm)\",\n            width: \"90vw\",\n            height: \"100vh\",\n          }}\n          src=\"https://docs.google.com/forms/d/e/1FAIpQLSeBrxdCbRf1M0YvZVHp2n3taph7-pAS9mkbN99m2ZPeBrf0yQ/viewform?embedded=true\"\n        >\n          Loading…\n        </iframe>\n      </DialogContent>\n      <DialogActions\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          backgroundColor: \"var(--txt-cl)\",\n        }}\n      >\n        <button onClick={onDialogCloseClicked} style={{ width: \"max-content\" }}>\n          Close\n        </button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from \"react\"\nimport { LearnerPbsForm } from \"./register\"\nimport { Dialog, DialogContent } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n  dialog: {\n    width: \"90vw\",\n    height: \"90%\",\n    margin: \"1rem auto\",\n  },\n  content: {\n    background: \"var(--txt-cl)\",\n    paddingTop: \"0\",\n  },\n  form: {\n    margin: \"11% auto var(--mg-sm)\",\n    width: \"100vw\",\n    height: \"100%\",\n  },\n}))\n\nexport function PbsDialog({\n  onDialogCloseClicked,\n  onPersonalBestsInputChange,\n  pbs,\n  open,\n}) {\n  const classes = useStyles()\n\n  return (\n    <Dialog\n      fullScreen={true}\n      open={open}\n      onClose={onDialogCloseClicked}\n      aria-labelledby=\"form-dialog-title\"\n      className={classes.dialog}\n    >\n      <DialogContent className={classes.content}>\n        <LearnerPbsForm\n          pbs={pbs}\n          onPersonalBestsInputChange={onPersonalBestsInputChange}\n          onDialogCloseClicked={onDialogCloseClicked}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from \"react\"\nimport { Save } from \"@material-ui/icons\"\nimport { camelCaseToNormal } from \"../../utils\"\nimport { TextField, Grid } from \"@material-ui/core\"\n\nfunction PersonalBestInput({ label, ...props }) {\n  return (\n    <Grid item>\n      <TextField\n        label={camelCaseToNormal(label)}\n        className=\"text-input\"\n        {...props}\n      />\n    </Grid>\n  )\n}\n\n//for learnerApp\nexport function LearnerPbsForm({\n  pbs,\n  onPersonalBestsInputChange,\n  onDialogCloseClicked,\n}) {\n  //it does changes, but doesn't show on the UI\n  const inputs = Object.keys(pbs).map((fieldName) => {\n    if (fieldName === \"learnerId\") return null\n    return (\n      <PersonalBestInput\n        label={fieldName}\n        name={fieldName}\n        type=\"text\"\n        key={fieldName}\n        value={pbs[fieldName]}\n        onChange={onPersonalBestsInputChange}\n      />\n    )\n  })\n\n  //use modal then\n  return (\n    <div className=\"pbs-form-wrapper\">\n      <h3 style={{ textTransform: \"capitalize\" }}>Personal Bests</h3>\n      <form>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-around\"\n          align=\"center\"\n          style={{ height: \"80vh\" }}\n        >\n          {inputs}\n        </Grid>\n      </form>\n      <Grid\n        item\n        className=\"pbs-form-btn-wrapper\"\n        style={{ justifyContent: \"center\" }}\n      >\n        <button\n          className=\"pbs-btn\"\n          onClick={onDialogCloseClicked}\n          style={{ width: \"30%\" }}\n        >\n          <Save className=\"pbs-btn-icon\" />\n          {\"Save\"}\n        </button>\n      </Grid>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { Logo, LoginForm } from \"./register\"\nimport {\n  UserAuth,\n  validateInstructorCredentials,\n  NavHelpers,\n} from \"../../services/register\"\nimport httpService from \"../../services/InstructorServiceSingleton\"\n\nexport function InstructorLoginPage({ onInstructorLogIn }) {\n  NavHelpers.setCurrentPage(\"/instructor/login\")\n\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" })\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  function onInputChanged(e) {\n    const changedField = e.target.getAttribute(\"name\")\n    const newValue = e.target.value.trim()\n    setCredentials((c) => {\n      c[changedField] = newValue\n      return c\n    })\n  }\n\n  async function onFormSubmitted(e) {\n    e.preventDefault()\n    const error = validateInstructorCredentials(credentials)\n    if (error) {\n      setErrorMessage(error)\n      return\n    }\n    setErrorMessage(null)\n    console.log(\"Logging in with \", credentials)\n\n    const { ok, payload } = await httpService.instructorLogin(credentials)\n\n    if (!ok) {\n      setErrorMessage(payload.message)\n      return\n    } else {\n      UserAuth.saveToken(payload.token)\n      onInstructorLogIn()\n    }\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        minHeight: \"100%\",\n        margin: \"0 auto\",\n      }}\n    >\n      <Logo />\n      <LoginForm\n        title=\"Instructor Login\"\n        onFormSubmitted={onFormSubmitted}\n        credentials={credentials}\n        onInputChanged={onInputChanged}\n        errorMessage={errorMessage}\n        type=\"instructor\"\n      />\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport { Logo, LoginForm } from \"./register\"\nimport {\n  NavHelpers,\n  UserAuth,\n  validateLearnerCredentials,\n} from \"../../services/register\"\nimport httpService from \"../../services/LearnerServiceSingleton\"\nimport { initSchedules } from \"../../reducers/learnerSchedulesSlice\"\nimport { initPbs } from \"../../reducers/learnerPbsSlice\"\nimport { useDispatch } from \"react-redux\"\n\nexport function LearnerLoginPage({ onLearnerLogIn, isLearnerLoggedIn }) {\n  NavHelpers.setCurrentPage(\"/learner/login\")\n\n  const dispatch = useDispatch()\n\n  const [credentials, setCredentials] = useState({ username: \"\", password: \"\" })\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  function onInputChanged(e) {\n    const changedField = e.target.getAttribute(\"name\")\n    const newValue = e.target.value.trim()\n    setCredentials((c) => {\n      c[changedField] = newValue\n      return c\n    })\n  }\n\n  async function onFormSubmitted(e) {\n    e.preventDefault()\n    const error = validateLearnerCredentials(credentials)\n    if (error) {\n      setErrorMessage(error)\n      return\n    }\n    setErrorMessage(null)\n    console.log(\"Logging in with \", credentials)\n\n    const { ok, payload } = await httpService.learnerLogin(credentials)\n\n    if (!ok) {\n      setErrorMessage(payload.message)\n      return\n    } else {\n      UserAuth.saveToken(payload.token)\n      delete payload.token\n      //redux?\n      //hard-code for now\n      dispatch(initSchedules(payload.schedules))\n      dispatch(initPbs(payload.pbs))\n      onLearnerLogIn()\n    }\n  }\n\n  return isLearnerLoggedIn ? (\n    <Redirect to=\"learner/schedules\" />\n  ) : (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        minHeight: \"100%\",\n        margin: \"0 auto\",\n      }}\n    >\n      <Logo />\n      <LoginForm\n        title=\"Learner Login\"\n        onFormSubmitted={onFormSubmitted}\n        credentials={credentials}\n        onInputChanged={onInputChanged}\n        errorMessage={errorMessage}\n      />\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport function Logo({ style }) {\n  return (\n    <div className=\"logo-wrapper\">\n      <img\n        style={style}\n        className=\"logo\"\n        src={require(\"../../assets/logo.jpg\")}\n        alt=\"New Zealand Olympic Weight-Lifting Logo\"\n      />\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button } from \"@material-ui/core\"\n\nexport function LoginFormButton({ label, onClick }) {\n  return (\n    <Button\n      type=\"submit\"\n      onClick={onClick}\n      variant=\"contained\"\n      color=\"secondary\"\n      style={{ fontSize: \"0.65rem\", maxWidth: \"max-content\" }}\n    >\n      {label}\n    </Button>\n  )\n}\n","import React from \"react\"\nimport { LoginFormButtonPanel, LoginFields } from \"./register\"\n\nfunction ErrorMessageDiv({ errorMessage }) {\n  return (\n    <div className=\"error-message-wrapper\">\n      <p\n        className=\"error-message\"\n        style={{ visibility: errorMessage ? \"visible\" : \"hidden\" }}\n      >\n        {errorMessage}\n      </p>\n    </div>\n  )\n}\n\nexport function LoginForm({\n  title,\n  onFormSubmitted,\n  errorMessage,\n  type,\n  credentials,\n  onInputChanged,\n}) {\n  return (\n    <>\n      <h1\n        style={{\n          fontSize: \"calc(var(--fs-md) * 0.75)\",\n          marginBottom: \"3rem\",\n        }}\n      >\n        {title}\n      </h1>\n      <form className=\"login-form\" onSubmit={onFormSubmitted}>\n        <LoginFields\n          credentials={credentials}\n          onInputChanged={onInputChanged}\n        />\n        {<ErrorMessageDiv errorMessage={errorMessage} />}\n        <LoginFormButtonPanel type={type} />\n      </form>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Grid, TextField } from \"@material-ui/core\"\n\nexport function LoginFields({ credentials, onInputChanged }) {\n  const fields = Object.keys(credentials).map((fieldName) => (\n    <Grid\n      item\n      xs={10}\n      md={6}\n      lg={4}\n      style={{ margin: \"0 auto\" }}\n      key={fieldName}\n    >\n      <TextField\n        style={{ marginBottom: \"1rem\" }}\n        variant=\"outlined\"\n        label={fieldName}\n        InputProps={{\n          // value: credentials[fieldName],\n          name: fieldName,\n          type: fieldName === \"password\" ? \"password\" : \"text\",\n        }}\n        onChange={onInputChanged}\n      />\n    </Grid>\n  ))\n  return <>{fields}</>\n}\n","import React from \"react\"\nimport { LoginFormButton } from \"./register\"\nimport { Grid } from \"@material-ui/core\"\n\nexport function LoginFormButtonPanel({ type }) {\n  let btns\n\n  if (type === \"instructor\") {\n    btns = <LoginFormButton customClassName=\"login right\" label=\"Log In\" />\n  } else {\n    btns = (\n      <>\n        <LoginFormButton customClassName=\"login left\" label=\"Sign Up\" />\n        <LoginFormButton customClassName=\"login right\" label=\"Log In\" />\n      </>\n    )\n  }\n  return (\n    <Grid\n      item\n      container\n      xs={10}\n      md={8}\n      lg={4}\n      justify=\"space-evenly\"\n      wrap=\"nowrap\"\n      style={{ margin: \"0 auto\", width: \"100%\" }}\n      // className=\"submit-btn-container\"\n    >\n      {btns}\n    </Grid>\n  )\n}\n","export const exerciseNames = [\n  \"snatch\",\n  \"clean and jerk\",\n  \"clean\",\n  \"split jerk\",\n  \"comp snatch\",\n  \"comp clean and jerk\",\n  \"comp total\",\n  \"power snatch\",\n  \"power clean\",\n  \"power jerk\",\n  \"push press\",\n  \"back squat\",\n  \"front squat\",\n  \"overhead squat\",\n  \"hang snatch\",\n  \"hang clean\",\n  \"block snatch\",\n  \"block clean\",\n  \"muscle snatch\",\n  \"strict press\",\n  \"snatch balance\",\n  \"snatch pull\",\n  \"clean pull\",\n  \"snatch deadlift\",\n  \"clean deadlift\",\n  \"pushups\",\n  \"pull-ups\",\n  \"dips\",\n]\n","import React, { useCallback } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { List, ListItem, ListItemText, ListItemIcon } from \"@material-ui/core\"\nimport { FitnessCenter, SentimentDissatisfied } from \"@material-ui/icons\"\n\nexport function ExerciseList({ exerciseNames }) {\n  const history = useHistory()\n\n  const navigateToSingleExercisePage = useCallback(\n    (e) => {\n      const targetExercise = e.currentTarget.getAttribute(\"id\")\n      console.log(\"Clicked!\", targetExercise)\n      //do you need to encode here?\n      history.push(`/practice.bests/${encodeURI(targetExercise)}`)\n    },\n    [history]\n  )\n\n  const exerciseList = exerciseNames.map((name) => {\n    return (\n      <ListItem\n        button\n        key={name}\n        id={name}\n        onClick={navigateToSingleExercisePage}\n        divider\n        className=\"exercise-list-item\"\n      >\n        <ListItemIcon>\n          {name === \"no exercise found\" ? (\n            <SentimentDissatisfied />\n          ) : (\n            <FitnessCenter />\n          )}\n        </ListItemIcon>\n        <ListItemText primary={name} />\n      </ListItem>\n    )\n  })\n\n  return <List style={{ minWidth: \"95vw\" }}>{exerciseList}</List>\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { exerciseNames } from \"./exerciseNames\"\n// eslint-disable-next-line no-extend-native\nDate.prototype.addHours = function (h) {\n  this.setTime(this.getTime() + h * 60 * 60 * 1000)\n  return this\n}\n\nconst initialState = exerciseNames.reduce((acc, k) => {\n  acc[k] = null\n  return acc\n}, {})\n\nexport const practiceBestsSlice = createSlice({\n  name: \"practiceBests\",\n  initialState,\n  reducers: {\n    setOnePracticeBest: (state, action) => {\n      const { exerciseName, records } = action.payload\n      state[`${exerciseName}`] = records\n    },\n    addNewRecord: (state, action) => {\n      const { exerciseName } = action.payload\n      state[`${exerciseName}`].push(action.payload)\n    },\n    updateOneRecord: (state, action) => {\n      const { exerciseName, pbId } = action.payload\n      const targetArr = state[`${exerciseName}`] //holds a reference to the orginal arr\n      const updatedIndex = targetArr.findIndex((r) => r.pbId === pbId)\n      targetArr[updatedIndex] = action.payload\n      targetArr[updatedIndex].lastEdited = new Date()\n        .addHours(13)\n        .toISOString()\n        .substr(0, 10)\n    },\n    deleteOneRecord: (state, action) => {\n      const { exerciseName, pbId } = action.payload\n      const targetArr = state[`${exerciseName}`]\n      const deletedIndex = targetArr.findIndex((r) => r.pbId === pbId)\n      targetArr.splice(deletedIndex, 1)\n    },\n  },\n})\n\n//selector\nexport const selectOnePracticeBest = (state, exerciseName) => {\n  return state.practiceBests[`${exerciseName}`]\n}\n\nexport const selectPracticeBestRecordsById = (state, exerciseName, pbId) => {\n  return state.practiceBests[`${exerciseName}`].find(\n    (i) => i.pbId === parseInt(pbId)\n  )\n}\n\n//action type\nexport const {\n  setOnePracticeBest,\n  updateOneRecord,\n  deleteOneRecord,\n  addNewRecord,\n} = practiceBestsSlice.actions\n\n//reducer to register with global store\nexport default practiceBestsSlice.reducer\n","import React from \"react\"\nimport { SentimentDissatisfied, Edit } from \"@material-ui/icons\"\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  IconButton,\n} from \"@material-ui/core\"\nimport { quickStyles } from \"../../../services/register\"\n\nexport default function SingleExerciseRecordList({ records, onEditClicked }) {\n  const classes = quickStyles({\n    listItemTextPrimary: {\n      fontSize: \"0.85rem\",\n      color: \"#333\",\n      textAlign: \"center\",\n      fontWeight: \"600\",\n    },\n    iconBtn: {\n      justifyContent: \"center\",\n      marginLeft: \"0.25rem\",\n      padding: \"0.5rem\",\n      color: \"var(--txt-cl)\",\n      boxShadow: \"none\",\n      borderRadius: \"50%\",\n      flex: \"0\",\n      border: \"none\",\n      \"& :hover\": {\n        color: \"#111\",\n      },\n    },\n  })\n\n  let items\n\n  if (records.length === 0) {\n    items = (\n      <ListItem divider>\n        <ListItemIcon>\n          <SentimentDissatisfied />\n        </ListItemIcon>\n        <ListItemText primary=\"No Available Records Found!\" />\n      </ListItem>\n    )\n  } else {\n    items = records.map(({ pbId, repMax, weight, lastEdited }) => {\n      return (\n        <ListItem button divider key={pbId} className=\"practice-best-list-item\">\n          <ListItemText\n            classes={{ primary: classes.listItemTextPrimary }}\n            primary={repMax}\n          />\n          <ListItemText\n            classes={{ primary: classes.listItemTextPrimary }}\n            primary={`${weight} Kg`}\n          />\n          <ListItemText\n            classes={{ primary: classes.listItemTextPrimary }}\n            primary={lastEdited}\n          />\n          <IconButton\n            classes={{ root: classes.iconBtn }}\n            className=\"practice-best-btn-icon\"\n            pbid={pbId}\n            onClick={onEditClicked}\n          >\n            <Edit fontSize=\"small\" />\n          </IconButton>\n        </ListItem>\n      )\n    })\n  }\n\n  return <List>{items}</List>\n}\n","import React from \"react\"\nimport { camelCaseToNormal } from \"../../../utils\"\nimport { TextField, Grid, Typography, InputAdornment } from \"@material-ui/core\"\n\nfunction InputEndAdornMent({ fieldName }) {\n  switch (fieldName) {\n    case \"weight\":\n      return <InputAdornment position=\"end\">Kg</InputAdornment>\n    case \"repMax\":\n      return <InputAdornment position=\"end\">Times</InputAdornment>\n    default:\n      return null\n  }\n}\n\nfunction PersonalBestInput({ label, ...props }) {\n  return (\n    <Grid item align=\"left\">\n      <TextField\n        label={camelCaseToNormal(label)}\n        className=\"text-input\"\n        {...props}\n        InputProps={{\n          endAdornment: <InputEndAdornMent fieldName={label} />,\n          required: true,\n        }}\n      />\n    </Grid>\n  )\n}\n\n//for learnerApp\nexport function SingleRecordForm({\n  record,\n  onRecordInputChange,\n  buttons,\n  isInputValid,\n}) {\n  function pickHelperText(fieldName, isValid) {\n    if (fieldName === \"weight\" && isValid === false) {\n      return \"Must Be A Positive Number\"\n    }\n\n    if (fieldName === \"repMax\" && isValid === false) {\n      return \"Please enter a Valid Rep Max from x1 to x10\"\n    }\n\n    if (fieldName === \"lastEdited\" && isValid === false) {\n      return \"Please enter a valid Date!\"\n    }\n\n    return null\n  }\n\n  //it does changes, but doesn't show on the UI\n  const inputs = !record\n    ? null\n    : Object.keys(record).map((fieldName) => {\n        if ([\"learnerId\", \"pbId\", \"exerciseName\"].includes(fieldName))\n          return null\n        return (\n          <PersonalBestInput\n            label={fieldName}\n            name={fieldName}\n            type=\"text\"\n            key={fieldName}\n            value={\n              fieldName === \"lastEdited\"\n                ? new Date(record[fieldName]).toDateString()\n                : record[fieldName]\n            }\n            onChange={onRecordInputChange}\n            error={!isInputValid[`${fieldName}`]}\n            helperText={pickHelperText(fieldName, isInputValid[`${fieldName}`])}\n            disabled={fieldName === \"lastEdited\"}\n            style={{ minWidth: \"100%\" }}\n          />\n        )\n      })\n\n  function FormTitle({ exerciseName, repMax, lastEdited }) {\n    return (\n      <Typography\n        variant=\"h6\"\n        style={{ textTransform: \"capitalize\", textAlign: \"center\" }}\n      >\n        {`${exerciseName}`}\n        <br />\n        {`${repMax} REPs`}\n        <br />\n        <small\n          style={{ fontSize: \"1rem\", opacity: \"0.75\", fontStyle: \"italic\" }}\n        >\n          {new Date(lastEdited).toDateString()}\n        </small>\n      </Typography>\n    )\n  }\n\n  //use modal then\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      style={{ overflow: \"hidden\" }}\n    >\n      <FormTitle {...record} />\n      <form>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-evenly\"\n          alignContent=\"center\"\n          style={{ height: \"40vh\" }}\n        >\n          {inputs}\n        </Grid>\n      </form>\n      {buttons}\n    </Grid>\n  )\n}\n","import React from \"react\"\nimport { Dialog, DialogContent } from \"@material-ui/core\"\nimport { quickStyles } from \"../../../services/register\"\nimport { Button, Typography, Grid } from \"@material-ui/core\"\nimport { Save, Close, Delete } from \"@material-ui/icons\"\nimport { SingleRecordForm } from \"./SingleRecordForm\"\n\nfunction FormButton({ onClick, classes, label, icon, disabled }) {\n  const Icon = icon\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      name={label}\n      onClick={onClick}\n      className={classes.formBtn}\n      disabled={disabled}\n    >\n      <Typography variant=\"button\" className={classes.formBtnLabel}>\n        {label}\n      </Typography>\n      <Icon fontSize=\"small\" />\n    </Button>\n  )\n}\n\nexport default function EditSingleRecordDialog({\n  open,\n  onRecordInputChange,\n  record,\n  isInputValid,\n  onDialogCloseClicked,\n}) {\n  const classes = quickStyles({\n    dialog: {\n      width: \"90vw\",\n      height: \"90%\",\n      margin: \"1rem auto\",\n    },\n    content: {\n      background: \"var(--txt-cl)\",\n      paddingTop: \"0\",\n    },\n    form: {\n      margin: \"11% auto var(--mg-sm)\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n    formBtn: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\",\n      maxWidth: \"30%\",\n      margin: \"1rem auto\",\n    },\n    formBtnLabel: {\n      fontSize: \"0.4rem\",\n    },\n    paperScrollPaper: {\n      width: \"100%\",\n      maxWidth: \"600px\",\n      height: \"max-content\",\n      margin: \"0\",\n    },\n  })\n\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby=\"form-dialog-title\"\n      className={classes.dialog}\n      classes={{ paperScrollPaper: classes.paperScrollPaper }}\n    >\n      <DialogContent className={classes.content}>\n        <SingleRecordForm\n          isInputValid={isInputValid}\n          onRecordInputChange={onRecordInputChange}\n          record={record}\n          buttons={\n            <Grid container wrap=\"nowrap\" justify=\"space-between\">\n              <FormButton\n                onClick={onDialogCloseClicked}\n                label=\"Close\"\n                classes={classes}\n                icon={Close}\n              />\n              <FormButton\n                onClick={onDialogCloseClicked}\n                label=\"Save\"\n                classes={classes}\n                icon={Save}\n                disabled={Object.values(isInputValid).some((i) => i === false)}\n              />\n              {record.pbId && (\n                <FormButton\n                  onClick={onDialogCloseClicked}\n                  label=\"Delete\"\n                  classes={classes}\n                  icon={Delete}\n                />\n              )}\n            </Grid>\n          }\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from \"react\"\nimport { Fab } from \"@material-ui/core\"\nimport { Add } from \"@material-ui/icons\"\nimport EditSingleRecordDialog from \"./EditSingleRecordDialog\"\n\nexport function AddRecordFloatingButton({\n  onAddNewRecordBtnClicked,\n  ...props\n}) {\n  //const NewRecordDialog = dialog\n\n  return (\n    <>\n      <Fab\n        onClick={onAddNewRecordBtnClicked}\n        aria-label=\"add\"\n        style={{\n          position: \"absolute\",\n          right: \"7%\",\n          bottom: \"7%\",\n          zIndex: 3,\n          background: \"var(--txt-cl)\",\n        }}\n        id=\"add-new-pb-btn\"\n      >\n        <Add />\n      </Fab>\n      <EditSingleRecordDialog {...props} />\n    </>\n  )\n}\n","import React, { useState } from \"react\"\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\"\n//https://reactrouter.com/web/api\n\nimport { NavBarControl, Footer, PageRoutes } from \"./app/register\"\n\nimport { FitnessCenter, ExitToApp, TodayOutlined } from \"@material-ui/icons\"\nimport {\n  ExercisePage,\n  LearnerSchedulePage,\n} from \"./components/learners/register\"\nimport { LearnerLoginPage } from \"./components/home/register\"\nimport {\n  LearnerPracticeBestsPage,\n  SingleExercisePage,\n} from \"./components/LearnerApp/register\"\n\nimport { UserAuth, NavHelpers } from \"./services/register\"\n\n//NOTE: the desired order of navBar item does not match with that of the regex parser\nconst allLinks = {\n  learner: [\n    {\n      to: \"/learner/schedules\",\n      label: \"Schedules\",\n      component: LearnerSchedulePage,\n      isProtected: true,\n      display: true,\n      icon: TodayOutlined,\n    },\n    {\n      to: \"/learner/practice.bests\",\n      label: \"Practice Bests\",\n      component: LearnerPracticeBestsPage,\n      isProtected: true,\n      display: true,\n      icon: FitnessCenter,\n    },\n    {\n      to: \"/logout\",\n      label: \"Log Out\",\n      component: null,\n      isProtected: true,\n      display: true,\n      icon: ExitToApp,\n    },\n    {\n      to: \"/practice.bests/:exerciseName\", //using /learner/practice.bests will match with the previous item above https://reactrouter.com/web/guides/primary-components\n      label: \"Practice Best\",\n      component: SingleExercisePage,\n      isProtected: true,\n      display: false,\n    },\n    {\n      to: \"/learner/:scheduleId/:week\",\n      label: \"Exercises\",\n      component: ExercisePage,\n      isProtected: true,\n      display: false,\n    },\n  ],\n  instructorApp: [\n    {\n      to: \"/instructor/login\",\n      label: \"Instructor Space\",\n      isProtected: false,\n      display: true,\n    },\n  ],\n}\n\nexport function LearnerApp({ onAppChange }) {\n  const [isLearnerLoggedIn, setIsLearnerLoggedIn] = useState(\n    UserAuth.isAuthenticated()\n  )\n\n  const [links, setLinks] = useState(\n    UserAuth.isAuthenticated() ? allLinks.learner : allLinks.instructorApp\n  )\n\n  function onLearnerLogIn() {\n    setLinks(allLinks.learner)\n    setIsLearnerLoggedIn(true)\n  }\n\n  function onLearnerLogOut(e) {\n    console.log(\"log me out!\")\n    UserAuth.clearToken()\n    NavHelpers.setCurrentPage(\"/learner/login\")\n    setLinks(allLinks.instructorApp) //this also makes sure that only the login page is registered as a route when user's logged out\n    setIsLearnerLoggedIn(false)\n  }\n\n  return (\n    <Router>\n      <NavBarControl\n        links={links}\n        onLogOut={onLearnerLogOut}\n        pageTitle=\"Learner Space\"\n        onAppChange={onAppChange}\n      />\n      <div className=\"App main\">\n        {isLearnerLoggedIn ? (\n          <Redirect\n            to={\n              NavHelpers.getCurrentPage() !== \"/learner/login\" &&\n              NavHelpers.getCurrentPage() !== null\n                ? NavHelpers.getCurrentPage()\n                : \"/learner/practice.bests\"\n            }\n          />\n        ) : (\n          <LearnerLoginPage\n            onLearnerLogIn={onLearnerLogIn}\n            isLearnerLoggedIn={isLearnerLoggedIn}\n          />\n        )}\n        <PageRoutes links={links} />\n      </div>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default LearnerApp\n","import React, { useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { selectLearnerSchedules } from \"../../reducers/learnerSchedulesSlice\"\nimport { ScheduleSelect } from \"./register\"\nimport { NavHelpers } from \"../../services/register\"\nimport { Redirect } from \"react-router-dom\"\n\nexport function LearnerSchedulePage() {\n  NavHelpers.setCurrentPage(\"/learner/schedules\")\n  const schedules = useSelector(selectLearnerSchedules)\n  const [selectedSchedule, setSelectedschedule] = useState(\n    schedules ? schedules[0] : null\n  )\n  const [selectedWeek, setSelectedWeek] = useState(schedules ? 1 : null)\n  const [isSchedulePicked, setIsSchedulePicked] = useState(false)\n\n  function onScheduleChecked(e) {\n    const checkedScheduleId = parseInt(e.target.value)\n    console.log(checkedScheduleId)\n    setSelectedschedule(\n      schedules.find((s) => s.scheduleId === checkedScheduleId)\n    )\n  }\n\n  function onWeekSelected(e) {\n    setSelectedWeek(parseInt(e.target.value))\n  }\n\n  function onScheduleSubmitted(e) {\n    setIsSchedulePicked(true)\n  }\n\n  return isSchedulePicked ? (\n    <Redirect to={`/learner/${selectedSchedule.scheduleId}/${selectedWeek}`} />\n  ) : (\n    <ScheduleSelect\n      selectedSchedule={selectedSchedule}\n      schedules={schedules}\n      onScheduleChecked={onScheduleChecked}\n      onScheduleSubmitted={onScheduleSubmitted}\n      selectedWeek={selectedWeek}\n      onWeekSelected={onWeekSelected}\n    />\n  )\n}\n","import React, { useState } from \"react\"\nimport { Grid, TextField, InputAdornment } from \"@material-ui/core\"\nimport { Search } from \"@material-ui/icons\"\nimport { exerciseNames } from \"../../../reducers/exerciseNames\"\nimport { ExerciseList } from \"./ExerciseList\"\nimport { quickStyles } from \"../../../services/register\"\n\nexport function LearnerPracticeBestsPage() {\n  const classes = quickStyles({\n    wrapper: { paddingTop: \"0.5rem\" },\n    searchBar: { padding: \"1rem\" },\n    icon: { color: \"#315c4d\" },\n    listWrapper: {\n      maxHeight: \"80vh\",\n      overflow: \"auto\",\n      textTransform: \"capitalize\",\n    },\n  })\n\n  const [searchPhrase, setSearchPhrase] = useState(\"\")\n  const [displayedExerciseNames, setDisplayedExerciseNames] = useState(\n    exerciseNames\n  )\n\n  function filterExerciseNames(searchPhrase) {\n    const regex = RegExp(searchPhrase, \"gi\")\n    const filteredList = exerciseNames.filter((name) => regex.test(name))\n    return filteredList.length > 0 ? filteredList : [\"no exercise found\"]\n  }\n\n  function onSearchPhraseChanged(e) {\n    setSearchPhrase(e.currentTarget.value)\n    setDisplayedExerciseNames(filterExerciseNames(e.currentTarget.value))\n  }\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      direction=\"column\"\n      justify=\"center\"\n      align=\"space-between\"\n      className={classes.wrapper}\n    >\n      <Grid item container justify=\"center\">\n        <TextField\n          placeholder=\"Search Exercise\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search className={classes.icon} />\n              </InputAdornment>\n            ),\n          }}\n          className={classes.searchBar}\n          value={searchPhrase}\n          onChange={onSearchPhraseChanged}\n        />\n      </Grid>\n      <Grid item container justify=\"center\" className={classes.listWrapper}>\n        <ExerciseList exerciseNames={displayedExerciseNames} />\n      </Grid>\n    </Grid>\n  )\n}\n","import React, { useEffect, useState, useCallback } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  selectOnePracticeBest,\n  setOnePracticeBest,\n  updateOneRecord,\n  deleteOneRecord,\n  addNewRecord,\n} from \"../../../reducers/practiceBestsSlice\"\nimport httpService from \"../../../services/LearnerServiceSingleton\"\nimport { useParams } from \"react-router-dom\"\nimport SingleExerciseRecordList from \"./SingleExerciseRecordList\"\nimport EditSingleRecordDialog from \"./EditSingleRecordDialog\"\nimport { shallowEqual } from \"../../../utils\"\nimport { Grid } from \"@material-ui/core\"\nimport {\n  quickStyles,\n  validateNewRepMax,\n  validateNewWeight,\n} from \"../../../services/register\"\nimport { AddRecordFloatingButton } from \"./AddRecordFloatingButton\"\n\nexport function SingleExercisePage() {\n  const classes = quickStyles({\n    wrapper: {\n      height: \"100%\",\n    },\n  })\n\n  const { exerciseName } = useParams()\n  const records = useSelector((state) =>\n    selectOnePracticeBest(state, exerciseName)\n  )\n  const dispatch = useDispatch()\n\n  const newRecordTemplate = {\n    exerciseName: exerciseName,\n    repMax: \"x1\",\n    weight: 100.0,\n    lastEdited: new Date().toDateString(),\n  }\n\n  const isValidInputTemplate = {\n    repMax: true,\n    weight: true,\n    lastEdited: true,\n  }\n  //for an existing record\n  const [clickedRecord, setClickedRecord] = useState(null)\n\n  //for a new record (other fields will be auto filled in redux slice)\n  const [tempRecord, setTempRecord] = useState(newRecordTemplate)\n  const [openEditRecordDialog, setOpenEditRecordDialog] = useState(false)\n  const [openAddNewRecordDialog, setOpenAddNewRecordDialog] = useState(false)\n  const [isInputValid, setIsInputValid] = useState(isValidInputTemplate)\n\n  function validateNewRecordAndUpdateState(e, setNewState) {\n    const changedField = e.currentTarget.getAttribute(\"name\")\n    let newValue = e.currentTarget.value\n    if (changedField === \"weight\") {\n      if (validateNewWeight(newValue)) {\n        setIsInputValid((state) => {\n          return { ...state, weight: true }\n        })\n      } else {\n        setIsInputValid((state) => {\n          return { ...state, weight: false }\n        })\n      }\n    }\n\n    if (changedField === \"repMax\") {\n      if (validateNewRepMax(newValue)) {\n        setIsInputValid((state) => {\n          return { ...state, repMax: true }\n        })\n      } else {\n        setIsInputValid((state) => {\n          return { ...state, repMax: false }\n        })\n      }\n    }\n\n    setNewState((currentRecord) => {\n      let newRecord = { ...currentRecord }\n      newRecord[`${changedField}`] = newValue\n      return newRecord\n    })\n  }\n\n  function onRecordInputChange(e) {\n    validateNewRecordAndUpdateState(e, setClickedRecord)\n  }\n\n  function onTempRecordInputChange(e) {\n    validateNewRecordAndUpdateState(e, setTempRecord)\n  }\n\n  function onAddNewRecordBtnClicked(e) {\n    setOpenAddNewRecordDialog(true)\n  }\n\n  function resetStateAndValidator(isNew = true) {\n    setIsInputValid(isValidInputTemplate)\n    if (isNew) {\n      setTempRecord(newRecordTemplate)\n    }\n  }\n\n  async function onNewRecordDialogCloseClicked(e) {\n    const btnName = e.currentTarget.getAttribute(\"name\")\n    if (btnName === \"Close\") {\n      resetStateAndValidator()\n      return setOpenAddNewRecordDialog(false)\n    }\n\n    const { ok, payload } = await httpService.createNewPracticeBest(tempRecord)\n\n    if (ok) {\n      dispatch(addNewRecord(payload))\n    }\n\n    setTempRecord(newRecordTemplate)\n    setOpenAddNewRecordDialog(false)\n  }\n\n  const memoizedOnEditClicked = useCallback(\n    (e) => {\n      function onEditClicked(e) {\n        const pbId = e.currentTarget.getAttribute(\"pbid\")\n        const clicked = records.find((r) => r.pbId === parseInt(pbId))\n        setClickedRecord(clicked)\n        setOpenEditRecordDialog(true)\n      }\n      onEditClicked(e)\n    },\n    [records]\n  )\n\n  async function onEditDialogCloseClicked(e) {\n    const btnName = e.currentTarget.getAttribute(\"name\")\n\n    if (btnName === \"Close\") {\n      resetStateAndValidator(false)\n      return setOpenEditRecordDialog(false)\n    } else if (btnName === \"Delete\") {\n      if (window.confirm(`Are you sure you want to delete this record?`)) {\n        const { ok } = await httpService.deletePracticeBest({\n          pbId: clickedRecord.pbId,\n        })\n        if (ok) {\n          dispatch(deleteOneRecord(clickedRecord))\n        }\n      }\n      resetStateAndValidator(false)\n      return setOpenEditRecordDialog(false)\n    }\n\n    if (\n      !shallowEqual(\n        records.find((r) => r.pbId === clickedRecord.pbId),\n        clickedRecord\n      )\n    ) {\n      const { ok } = await httpService.updatePracticeBest(clickedRecord)\n      if (ok) {\n        dispatch(updateOneRecord(clickedRecord))\n      }\n    } else {\n      console.log(\"Same shit no update!\")\n    }\n    resetStateAndValidator(false)\n    return setOpenEditRecordDialog(false)\n  }\n\n  useEffect(() => {\n    async function fetchRecords(exerciseName) {\n      if (!records) {\n        const {\n          ok,\n          payload,\n        } = await httpService.getPracticeBestsByExerciseName(exerciseName)\n        if (ok) {\n          dispatch(setOnePracticeBest({ exerciseName, records: payload }))\n        } else {\n          return\n        }\n      }\n    }\n    fetchRecords(exerciseName)\n  }, [exerciseName, dispatch, records])\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignContent=\"center\"\n      className={classes.wrapper}\n    >\n      {records ? (\n        <SingleExerciseRecordList\n          records={records}\n          onEditClicked={memoizedOnEditClicked}\n        />\n      ) : (\n        <div>Fetching Records for {exerciseName}</div>\n      )}\n      {clickedRecord && (\n        <EditSingleRecordDialog\n          open={openEditRecordDialog}\n          onDialogCloseClicked={onEditDialogCloseClicked}\n          record={clickedRecord}\n          exerciseName={exerciseName}\n          onRecordInputChange={onRecordInputChange}\n          isInputValid={isInputValid}\n        />\n      )}\n      <AddRecordFloatingButton\n        open={openAddNewRecordDialog}\n        onDialogCloseClicked={onNewRecordDialogCloseClicked}\n        onRecordInputChange={onTempRecordInputChange}\n        record={tempRecord}\n        onAddNewRecordBtnClicked={onAddNewRecordBtnClicked}\n        isInputValid={isInputValid}\n      />\n    </Grid>\n  )\n}\n","import XLSX from \"xlsx\"\nimport httpService from \"../../services/ProgrammeServiceSingleton\"\n\nexport class myExcelReader {\n  constructor(programmeIds, scheduleName, isNew = true, scheduleId = null) {\n    this.reader = new FileReader()\n    this.reader.programmeIds = programmeIds\n    this.reader.scheduleName = scheduleName\n    this.reader.isNew = isNew\n    this.reader.scheduleId = scheduleId\n    this.reader.makeTimeTable = function (exercisesArr) {\n      const aggregate = {}\n\n      function getWeekDayPair(exercisesArr) {\n        let prevPair = [0, 0]\n        return exercisesArr.reduce((pairs, { week, day }) => {\n          if (prevPair[0] !== week || prevPair[1] !== day) {\n            prevPair = [week, day]\n            pairs.push([week, day])\n          }\n          return pairs\n        }, [])\n      }\n\n      function extractDailyExercises(w, d) {\n        exercisesArr\n          .filter(({ week, day }) => week === w && day === d)\n          .reduce((acc, { exerciseName, instruction }) => {\n            //initialise prop week if not exist\n            if (acc[`week ${w}`] === undefined) {\n              acc[`week ${w}`] = {}\n            }\n\n            //initialise prop day of week if not exist\n            if (acc[`week ${w}`][`day ${d}`] === undefined) {\n              acc[`week ${w}`][`day ${d}`] = []\n            }\n\n            //push obj to proper week and day\n            acc[`week ${w}`][`day ${d}`].push({ exerciseName, instruction })\n\n            return acc\n          }, aggregate)\n      }\n\n      getWeekDayPair(exercisesArr).forEach((dayInWeek) =>\n        extractDailyExercises(dayInWeek[0], dayInWeek[1])\n      )\n      return aggregate\n    }\n    this.reader.onload = async function (event) {\n      const data = event.target.result\n      const workbook = XLSX.read(data, {\n        type: \"buffer\",\n      })\n\n      const rows = []\n\n      workbook.SheetNames.forEach(function (sheetName) {\n        //which is actually an array of rows\n        const XL_row_object = XLSX.utils.sheet_to_json(\n          workbook.Sheets[sheetName]\n        )\n        rows.push(...XL_row_object)\n      })\n\n      let payload = { timetable: this.makeTimeTable(rows) }\n      let isActionSuccess\n\n      if (isNew) {\n        payload = {\n          ...payload,\n          scheduleName: this.scheduleName,\n          programmeIds: this.programmeIds,\n          weekCount: workbook.SheetNames.length,\n        }\n        isActionSuccess = await httpService.postNewSchedule(payload)\n      } else {\n        payload = {\n          ...payload,\n          scheduleId: this.scheduleId,\n          weekCount: workbook.SheetNames.length,\n        }\n        isActionSuccess = await httpService.repostSchedule(payload)\n      }\n      return isActionSuccess\n    }\n\n    this.reader.onerror = (event) => {\n      console.error(\"File could not be read! Code \" + event.target.error.code)\n    }\n\n    this.reader.readAsArrayBufferPromise = (file) => {\n      return new Promise((resolve, reject) => {\n        let r = new FileReader()\n        r.onload = (e) => resolve(e.target.result)\n        r.onerror = reject\n        r.readAsArrayBuffer(file)\n      })\n    }\n  }\n}\n","import React, { useState } from \"react\"\nimport { capitalise } from \"../utils\"\nimport { ActionNotificationDiv } from \"../components/ActionNotificationDiv\"\n\nexport function useActionSnackbar(action, serviceMethod) {\n  const [actionStatus, setActionStatus] = useState({\n    action: null,\n    isActionSuccess: true,\n  })\n\n  // basically like a middleware that intercepts the response\n  async function callDecoratedService() {\n    setActionStatus({ action: action, isActionSuccess: null })\n    const res = await serviceMethod(...arguments)\n    if (res.ok) {\n      setActionStatus({ action: action, isActionSuccess: true })\n      console.log(`${capitalise(action)} Successful!`)\n    } else {\n      setActionStatus({ action: action, isActionSuccess: false })\n      console.log(`${capitalise(action)} failed!`)\n    }\n    //for custom side-effect outside of the component\n    return res\n  }\n\n  function onCloseActionStatusDiv() {\n    setActionStatus({ action: null, isActionSuccess: null })\n  }\n\n  function Component() {\n    return (\n      <ActionNotificationDiv\n        actionStatus={actionStatus}\n        onCloseActionStatusDiv={onCloseActionStatusDiv}\n      />\n    )\n  }\n\n  //this allows the hook to be used with different services in the same component\n  function makePayloadObjectWithCustomPropNames(action) {\n    let returnedObj = {}\n    returnedObj[`${action}ActionStatus`] = actionStatus\n    returnedObj[`set${capitalise(action)}ActionStatus`] = setActionStatus\n    returnedObj[\n      `callDecorated${capitalise(action)}Service`\n    ] = callDecoratedService\n    returnedObj[\n      `onClose${capitalise(action)}StatusDiv`\n    ] = onCloseActionStatusDiv\n\n    returnedObj[`${capitalise(action)}Snackbar`] = Component\n    return returnedObj\n  }\n\n  const propsAndHooks = makePayloadObjectWithCustomPropNames(action)\n\n  return propsAndHooks\n}\n","import React, { useState, useEffect } from \"react\"\nimport { myExcelReader } from \"./myExcelReader\"\nimport {\n  fileReaderPromise,\n  makeSchedulePayload,\n  findIndexAndDelete,\n} from \"../../services/register\"\nimport { FileUploader, ProgrammeOptions, ScheduleNameInput } from \"./register\"\nimport { Grid, FormHelperText } from \"@material-ui/core\"\nimport { useFetchSnackbar, useActionSnackbar } from \"../../hooks/register\"\nimport httpService from \"../../services/ProgrammeServiceSingleton\"\n\n//a good candidate for Redux, since needed by many components, lets just do useState for now\nexport function ScheduleUploader({ onActionSuccess }) {\n  const [programmes, setProgrammes] = useState(null)\n  const [selectedProgrammeIds, setSelectedProgrammeIds] = useState([])\n  const [scheduleName, setScheduleName] = useState(\"\")\n  // const [isFetchSuccess, setIsFetchSuccess] = useState(null)\n\n  const {\n    isFetchSuccess,\n    setIsFetchSuccess,\n    FetchNotificationDiv,\n  } = useFetchSnackbar(\"programmes\")\n\n  const { callDecoratedUploadService, UploadSnackbar } = useActionSnackbar(\n    \"upload\",\n    httpService.postNewSchedule\n  )\n\n  function onProgrammeChecked(e) {\n    const checkedProgrammeId = parseInt(e.target.value)\n    if (e.target.checked) {\n      console.log(checkedProgrammeId)\n      setSelectedProgrammeIds([...selectedProgrammeIds, checkedProgrammeId])\n    } else {\n      setSelectedProgrammeIds((selectedProgrammeIds) => {\n        let newArr = [...selectedProgrammeIds]\n        findIndexAndDelete(checkedProgrammeId, newArr)\n        return newArr\n      })\n    }\n  }\n\n  function onClickedScheduleNameChanged(e) {\n    setScheduleName(e.target.value)\n  }\n\n  useEffect(() => {\n    //this should stay here unless all components have a status tracking feature, which makes sense\n    async function fetchProgrammes() {\n      const { ok, payload } = await httpService.fetchProgrammes()\n\n      if (ok) {\n        console.log(payload)\n        //effect here\n        setProgrammes(payload.programmes)\n        setIsFetchSuccess(true)\n      } else {\n        //another effect\n        setIsFetchSuccess(false)\n      }\n    }\n    fetchProgrammes()\n  }, [setIsFetchSuccess])\n\n  async function onFileUploaded(e) {\n    const selectedFile = e.target.files[0]\n    const r = new myExcelReader(selectedProgrammeIds, scheduleName)\n    //empty rows are skipped!\n    //this is async (oneload and onerror are defined inside the r instance)\n    r.reader.readAsArrayBufferPromise(selectedFile)\n\n    const buffer = await fileReaderPromise(selectedFile)\n    const newSchedule = makeSchedulePayload(\n      buffer,\n      selectedProgrammeIds,\n      scheduleName,\n      true\n    )\n\n    const { ok, payload } = await callDecoratedUploadService(newSchedule)\n    if (ok) {\n      const newScheduleInfoObject = makeNewScheduleInfoObject(\n        payload,\n        programmes\n      )\n      onActionSuccess(\"upload\", { newScheduleInfoObject })\n      console.log(\"Upload Successful!\")\n      return\n    }\n  }\n\n  function makeNewScheduleInfoObject(payload, programmes) {\n    return {\n      ...payload,\n      programmes: programmes.filter((p) =>\n        selectedProgrammeIds.includes(p.programmeId)\n      ),\n    }\n  }\n\n  return (\n    <Grid\n      item\n      xs={8}\n      md={12}\n      lg={12}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {programmes ? (\n        <>\n          <ScheduleNameInput\n            label=\"Cycle Name\"\n            onClickedScheduleNameChanged={onClickedScheduleNameChanged}\n            scheduleName={scheduleName}\n          />\n          <ProgrammeOptions\n            programmes={programmes}\n            isFetchSuccess={isFetchSuccess}\n            onProgrammeChecked={onProgrammeChecked}\n            label=\"Publish to Team: \"\n          />\n          <UploadSnackbar />\n          {scheduleName.length > 5 ? (\n            <FileUploader onFileUploaded={onFileUploaded} />\n          ) : (\n            <FormHelperText>\n              Please Enter The Cycle's Name Before Uploading\n            </FormHelperText>\n          )}\n        </>\n      ) : (\n        // <FetchProgrammesNotificationDiv isFetchSuccess={isFetchSuccess} />\n        <FetchNotificationDiv />\n      )}\n    </Grid>\n  )\n}\n","import React from \"react\"\nimport { InputLabel } from \"@material-ui/core\"\nimport { CloudUploadRounded } from \"@material-ui/icons\"\n\nexport function FileUploader({ onFileUploaded }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        marginTop: \"var(--mg-sm)\",\n      }}\n    >\n      <InputLabel\n        style={{\n          padding: \"var(--pd-sm)\",\n          minWidth: \"max-content\",\n          margin: \"0 auto\",\n          border: \"1px solid var(--txt-cl)\",\n        }}\n        htmlFor=\"fileUploader\"\n      >\n        <CloudUploadRounded\n          style={{\n            color: \"var(--bg-cl)\",\n            fontSize: \"var(--fs-lg)\",\n            margin: \"0 calc(1 * var(--mg-lg))\",\n          }}\n        />\n      </InputLabel>\n      <input\n        style={{ margin: \"0 auto\", display: \"none\" }}\n        type=\"file\"\n        id=\"fileUploader\"\n        name=\"fileUploader\"\n        accept=\".xls, .xlsx\"\n        onChange={onFileUploaded}\n      />\n      {/* <pre id=\"jsonObject\" style={{ fontSize: \"10px\", color: \"black\" }}>\n        {\" \"}\n        JSON :{\" \"}\n      </pre> */}\n    </div>\n  )\n}\n","import React from \"react\"\nimport {\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Checkbox,\n  Typography,\n} from \"@material-ui/core\"\n\nexport function ProgrammeOptions({ programmes, onProgrammeChecked, label }) {\n  let content\n  if (programmes.length > 0) {\n    const checkboxes = programmes.map(({ programmeName, programmeId }) => {\n      return (\n        <FormControlLabel\n          key={programmeId}\n          control={\n            <Checkbox\n              onChange={onProgrammeChecked}\n              name={programmeName}\n              value={programmeId}\n              color=\"primary\"\n            />\n          }\n          label={programmeName}\n        />\n      )\n    })\n    content = (\n      <>\n        <FormLabel component=\"legend\">{label}</FormLabel>\n        <FormGroup>{checkboxes}</FormGroup>\n      </>\n    )\n  } else {\n    content = <Typography component=\"p\">No Programme Available</Typography>\n  }\n\n  return (\n    <FormControl component=\"fieldset\" style={{ marginBottom: \"var(--mg-sm)\" }}>\n      {content}\n    </FormControl>\n  )\n}\n","class ScheduleReducers {\n  static _updateScheduleDetails(\n    { scheduleId, scheduleName, weekCount },\n    prevSchedules\n  ) {\n    const newSchedules = [...prevSchedules]\n    const targetIndex = newSchedules.findIndex(\n      (s) => s.scheduleId === scheduleId\n    )\n    newSchedules[targetIndex] = {\n      ...newSchedules[targetIndex],\n      scheduleName,\n      weekCount,\n    }\n    return newSchedules\n  }\n\n  static _addPublishedProgramme({ scheduleId, programmes }, prevSchedules) {\n    const newSchedules = [...prevSchedules]\n    //this returns a reference to the item in the array\n    const updatedSchedule = newSchedules.find(\n      (s) => s.scheduleId === scheduleId\n    )\n\n    updatedSchedule.programmes = [...updatedSchedule.programmes, ...programmes]\n    return newSchedules\n  }\n\n  static _removeProgrammeFromSchedule(\n    { scheduleId, targetProgramme },\n    prevSchedules\n  ) {\n    let newSchedules = [...prevSchedules]\n    let targetSchedule = newSchedules.find((s) => s.scheduleId === scheduleId)\n    let removedProgrammeIndex = targetSchedule.programmes.findIndex(\n      (p) => p.programmeId === targetProgramme.programmeId\n    )\n    targetSchedule.programmes.splice(removedProgrammeIndex, 1)\n    return newSchedules\n  }\n\n  static _deleteOneScheduleById({ scheduleId }, prevSchedules) {\n    return prevSchedules.filter((s) => s.scheduleId !== scheduleId)\n  }\n\n  static _addNewSchedule({ newScheduleInfoObject }, prevSchedules) {\n    return [...prevSchedules, newScheduleInfoObject]\n  }\n\n  //command & factory pattern\n  static factory(schedules, setSchedules) {\n    return function (action, payload) {\n      switch (action) {\n        case \"delete\":\n          setSchedules(\n            ScheduleReducers._deleteOneScheduleById(payload, schedules)\n          )\n          return\n        case \"upload\":\n          setSchedules(ScheduleReducers._addNewSchedule(payload, schedules))\n          return\n        case \"publish\":\n          setSchedules(\n            ScheduleReducers._addPublishedProgramme(payload, schedules)\n          )\n          return\n        case \"unpublish\":\n          setSchedules(\n            ScheduleReducers._removeProgrammeFromSchedule(payload, schedules)\n          )\n          return\n        case \"repost\":\n          setSchedules(\n            ScheduleReducers._updateScheduleDetails(payload, schedules)\n          )\n          return\n        default:\n          return\n      }\n    }\n  }\n}\n\nexport default ScheduleReducers\n","import React, { useState, useEffect } from \"react\"\nimport {\n  ScheduleCards,\n  AddScheduleFloatingButton,\n  ReuploadScheduleDialog,\n  PublishScheduleDialog,\n} from \"./register\"\nimport ScheduleReducers from \"./ScheduleReducers\"\n\nimport { Grid } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useActionSnackbar, useFetchSnackbar } from \"../../hooks/register\"\nimport httpService from \"../../services/ProgrammeServiceSingleton\"\nimport { fileReaderPromise } from \"../../services/register\"\nimport { NavHelpers } from \"../../services/register\"\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    justifyContent: \"space-around\",\n  },\n  item: {\n    margin: \"var(--mg-sm)\",\n    padding: 0,\n  },\n}))\n\nfunction resetState(currentState, initialState, setStateFunc) {\n  if (currentState !== initialState) {\n    setStateFunc(initialState)\n  }\n}\n\nfunction checkCanUpdate(newName, currentName, isFileUploaded) {\n  const isValidLength = newName.length > 0\n  const isNewName = newName !== currentName\n  const caseOne = !isFileUploaded && isValidLength && isNewName\n  const caseTwo = isFileUploaded && isValidLength\n  return caseOne || caseTwo\n}\n\nexport function SchedulePanel() {\n  NavHelpers.setCurrentPage(\"/instructor/schedules\")\n  const [schedules, setSchedules] = useState(null)\n  const [clickedScheduleId, setClickedScheduleId] = useState(null)\n  const [clickedSchedule, setClickedSchedule] = useState(null)\n  const [currentScheduleName, setCurrentScheduleName] = useState(null)\n  const [openReuploadDialog, setOpenReuploadDialog] = useState(false)\n  const [openPublishDialog, setOpenPublishDialog] = useState(false)\n  const [canUpdate, setCanUpdate] = useState(false)\n  const [buffer, setBuffer] = useState(null)\n  const [isFileUploaded, setIsFileUploaded] = useState(false)\n\n  // ATTENTION: use object as API rather than array since we can pick and choose what to destructure. Downside is the prop name is fixed. That's why useState is [state, setState] rather than {state, setState}\n  const { setIsFetchSuccess, FetchNotificationDiv } = useFetchSnackbar(\n    \"schedules\"\n  )\n\n  const { callDecoratedDeleteService, DeleteSnackbar } = useActionSnackbar(\n    \"delete\",\n    httpService.deleteSchedule\n  )\n\n  const updateSchedulesList = ScheduleReducers.factory(schedules, setSchedules)\n\n  async function onFileUploaded(e) {\n    const selectedFile = e.target.files[0]\n    const buffer = await fileReaderPromise(selectedFile)\n    setBuffer(buffer)\n    setIsFileUploaded(true)\n    setCanUpdate(true)\n  }\n\n  function getClickedScheduleId(e) {\n    return parseInt(e.currentTarget.getAttribute(\"scheduleId\"))\n  }\n\n  function onEditScheduleClicked(e) {\n    //need to use currentTarget since it's a material icon component so need to get the reference to the underlying base DOM element\n    console.log(e.currentTarget.getAttribute(\"scheduleId\"))\n    setOpenReuploadDialog(true)\n    setClickedScheduleId(getClickedScheduleId(e))\n    const clicked = schedules.find(\n      (s) => s.scheduleId === getClickedScheduleId(e)\n    )\n\n    setClickedSchedule(clicked)\n    setCurrentScheduleName(clicked.scheduleName)\n  }\n\n  //shared by all dialogs since only one can be opened at the same time\n  function onDialogCloseClicked(e) {\n    resetState(openReuploadDialog, false, setOpenReuploadDialog)\n    resetState(openPublishDialog, false, setOpenPublishDialog)\n    resetState(isFileUploaded, false, setIsFileUploaded)\n    resetState(canUpdate, false, setCanUpdate)\n\n    resetState(buffer, null, setBuffer)\n    resetState(clickedSchedule, null, setClickedSchedule)\n    resetState(currentScheduleName, null, setCurrentScheduleName)\n  }\n\n  async function onDeleteScheduleClicked(e) {\n    const scheduleId = getClickedScheduleId(e)\n    setClickedScheduleId(getClickedScheduleId(e))\n    if (\n      window.confirm(\n        `Are you sure you want to delete schedule id ${scheduleId}`\n      )\n    ) {\n      const { ok } = await callDecoratedDeleteService(scheduleId)\n      if (ok) {\n        updateSchedulesList(\"delete\", { scheduleId })\n      }\n    }\n  }\n\n  function onPublishScheduleClicked(e) {\n    console.log(\n      `Publish schedule id ${e.currentTarget.getAttribute(\"scheduleId\")}`\n    )\n    setOpenPublishDialog(true)\n    setClickedScheduleId(getClickedScheduleId(e))\n  }\n\n  function onClickedScheduleNameChanged(e) {\n    const scheduleName = e.target.value\n    setClickedSchedule({ ...clickedSchedule, scheduleName })\n    setCanUpdate(\n      checkCanUpdate(scheduleName, currentScheduleName, isFileUploaded)\n    )\n  }\n\n  useEffect(() => {\n    async function fetchSchedules() {\n      const { ok, payload } = await httpService.fetchScheduleInfo()\n      if (ok) {\n        setIsFetchSuccess(true)\n        setSchedules(payload)\n      }\n      setIsFetchSuccess(false)\n    }\n    fetchSchedules()\n  }, [setIsFetchSuccess])\n\n  const classes = useStyles()\n\n  return (\n    <>\n      <DeleteSnackbar />\n      <AddScheduleFloatingButton onActionSuccess={updateSchedulesList} />\n      <Grid container className={classes.container}>\n        {!schedules ? (\n          <FetchNotificationDiv style={{ margin: \"0 auto\" }} />\n        ) : (\n          <>\n            <ScheduleCards\n              schedules={schedules}\n              onEditScheduleClicked={onEditScheduleClicked}\n              onPublishScheduleClicked={onPublishScheduleClicked}\n              onDeleteScheduleClicked={onDeleteScheduleClicked}\n              onActionSuccess={updateSchedulesList}\n              // something about closer/scope that prevents passing references here\n            />\n          </>\n        )}\n      </Grid>\n      <ReuploadScheduleDialog\n        open={openReuploadDialog}\n        onDialogCloseClicked={onDialogCloseClicked}\n        clickedSchedule={clickedSchedule}\n        onActionSuccess={updateSchedulesList}\n        onClickedScheduleNameChanged={onClickedScheduleNameChanged}\n        canUpdate={canUpdate}\n        buffer={buffer}\n        isFileUploaded={isFileUploaded}\n        onFileUploaded={onFileUploaded}\n      />\n      <PublishScheduleDialog\n        open={openPublishDialog}\n        onDialogCloseClicked={onDialogCloseClicked}\n        scheduleId={clickedScheduleId}\n        onActionSuccess={updateSchedulesList}\n      />\n    </>\n  )\n}\n","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { ScheduleCard } from \"./register\"\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    justifyContent: \"space-around\",\n  },\n  item: {\n    margin: \"var(--mg-sm)\",\n    padding: 0,\n  },\n}))\n\n//can also make a more general wrapper\nfunction GridItemWrapper(Component, styleHook) {\n  return (props) => {\n    const classes = styleHook()\n    return (\n      <Grid item xs={8} sm={6} md={3} className={classes.item}>\n        <Component {...props} />\n      </Grid>\n    )\n  }\n}\n\nfunction CustomScheduleCard(props) {\n  return GridItemWrapper(ScheduleCard, useStyles)(props)\n}\n\nexport function ScheduleCards({ schedules, unPublishSnackbar, ...props }) {\n  const cards = schedules\n    ? schedules.map(({ scheduleId, scheduleName, weekCount, programmes }) => {\n        return (\n          <CustomScheduleCard\n            key={scheduleId}\n            scheduleId={scheduleId}\n            scheduleName={scheduleName}\n            weekCount={weekCount}\n            programmes={programmes}\n            {...props}\n          />\n        )\n      })\n    : null\n\n  return <>{cards}</>\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useActionSnackbar } from \"../../hooks/register\"\nimport httpService from \"../../services/ProgrammeServiceSingleton\"\n\nimport {\n  Card,\n  CardHeader,\n  List,\n  CardContent,\n  CardActions,\n  IconButton,\n  ListItem,\n  Typography,\n  ListItemText,\n  ListItemIcon,\n} from \"@material-ui/core\"\n\nimport { red } from \"@material-ui/core/colors\"\nimport { Delete, Edit, Share, Close } from \"@material-ui/icons\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"var(--txt-cl)\",\n    boxShadow: \"var(--bsd-md)\",\n  },\n  media: {},\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  actionBtnWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n  },\n  scheduleActionBtn: {\n    border: \"none\",\n    boxShadow: \"none\",\n    padding: \"var(--pd-sm)\",\n    width: \"max-content\",\n    \"&:hover\": {\n      color: \"var(--secondary-cl)\",\n      background: \"#333\",\n    },\n  },\n}))\n\nfunction getAttribute(e, attr, isNumber = false) {\n  return isNumber\n    ? parseInt(e.currentTarget.getAttribute(attr))\n    : e.currentTarget.getAttribute(attr)\n}\n\nexport function ScheduleCard({\n  onEditScheduleClicked,\n  onPublishScheduleClicked,\n  onDeleteScheduleClicked,\n  createdAt,\n  weekCount,\n  scheduleName,\n  scheduleId,\n  programmes,\n  onActionSuccess,\n}) {\n  const classes = useStyles()\n\n  //think of a way to lazy load the hooks!\n  const {\n    callDecoratedUnpublishService,\n    UnpublishSnackbar,\n  } = useActionSnackbar(\"unpublish\", httpService.unpublishSchedule)\n\n  async function onUnpublishScheduleClicked(e) {\n    const targetProgramme = programmes.find(\n      ({ programmeId }) => programmeId === getAttribute(e, \"programmeId\", true)\n    )\n\n    if (\n      window.confirm(\n        `Are you sure you want to remove cycle ${scheduleName} from team ${targetProgramme.programmeName}`\n      )\n    ) {\n      //FIXME:\n      const { ok } = await callDecoratedUnpublishService(\n        scheduleId,\n        targetProgramme.programmeId\n      )\n      if (ok) {\n        onActionSuccess(\"unpublish\", { scheduleId, targetProgramme })\n      }\n    }\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={scheduleName ? scheduleName : \"Unnamed\"}\n        subheader={\n          weekCount ? `${weekCount} week(s)` : \"No Exercises Added Yet\"\n        } //TODO: should a created_at field be added?\n      />\n      <CardContent>\n        {programmes.length === 0 ? null : (\n          <List style={{ textAlign: \"left\" }} className=\"team-list\">\n            <Typography variant=\"subtitle1\">\n              Currently Used by Team(s):{\" \"}\n            </Typography>\n            {programmes.map((p) => (\n              <ListItem\n                button\n                key={p.programmeId}\n                onClick={onUnpublishScheduleClicked}\n                programmeid={p.programmeId}\n                scheduleid={scheduleId}\n                programmename={p.programmeName}\n                className=\"team-list-item\"\n              >\n                <ListItemText\n                  className=\"team-list-item-text\"\n                  primary={p.programmeName}\n                />\n                <ListItemIcon>\n                  <Close className=\"unpublish-schedule-icon\" fontSize=\"small\" />\n                </ListItemIcon>\n              </ListItem>\n            ))}\n          </List>\n        )}\n        <UnpublishSnackbar />\n      </CardContent>\n      <CardActions disableSpacing className={classes.actionBtnWrapper}>\n        <IconButton\n          className={classes.scheduleActionBtn}\n          aria-label=\"edit\"\n          onClick={onEditScheduleClicked}\n          scheduleid={scheduleId}\n        >\n          <Edit />\n        </IconButton>\n        <IconButton\n          className={classes.scheduleActionBtn}\n          aria-label=\"publish\"\n          onClick={onPublishScheduleClicked}\n          scheduleid={scheduleId}\n        >\n          <Share />\n        </IconButton>\n        <IconButton\n          className={classes.scheduleActionBtn}\n          aria-label=\"delete\"\n          onClick={onDeleteScheduleClicked}\n          scheduleid={scheduleId}\n        >\n          <Delete />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n}\n","import React from \"react\"\nimport { Fab } from \"@material-ui/core\"\nimport { CloudUpload } from \"@material-ui/icons\"\nimport { AddScheduleFormDialog } from \"./register\"\n\nexport function AddScheduleFloatingButton({ onActionSuccess }) {\n  const [open, setOpen] = React.useState(false)\n\n  function onDialogOpenClicked() {\n    setOpen(true)\n  }\n\n  function handleClose() {\n    setOpen(false)\n  }\n  return (\n    <>\n      <Fab\n        onClick={onDialogOpenClicked}\n        variant=\"extended\"\n        aria-label=\"add\"\n        style={{ position: \"absolute\", left: \"5%\", top: \"13.5%\" }}\n      >\n        <CloudUpload />\n        <span\n          style={{ textAlign: \"center\" }}\n          className=\"add-schedule-btn-wrapper\"\n        >\n          New Cycle\n        </span>\n      </Fab>\n      <AddScheduleFormDialog\n        open={open}\n        handleClose={handleClose}\n        onActionSuccess={onActionSuccess}\n      />\n    </>\n  )\n}\n","import React from \"react\"\nimport { ScheduleUploader } from \"../schedules/register\"\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  Typography,\n} from \"@material-ui/core\"\n\nexport function AddScheduleFormDialog({ handleClose, open, onActionSuccess }) {\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle\n        style={{\n          backgroundColor: \"var(--txt-cl)\",\n        }}\n      >\n        <Typography style={{ fontWeight: \"var(--fw-md)\" }}>\n          New Cycle\n        </Typography>\n      </DialogTitle>\n      <DialogContent className=\"add-new-schedule-dialog\">\n        <ScheduleUploader onActionSuccess={onActionSuccess} />\n      </DialogContent>\n      <DialogActions\n        style={{\n          justifyContent: \"center\",\n          padding: \"0\",\n          backgroundColor: \"var(--txt-cl)\",\n        }}\n      >\n        <button onClick={handleClose} style={{ width: \"max-content\" }}>\n          Close\n        </button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from \"react\"\nimport { ScheduleReuploader } from \"../schedules/register\"\nimport { useActionSnackbar } from \"../../hooks/register\"\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  Typography,\n} from \"@material-ui/core\"\nimport httpService from \"../../services/ProgrammeServiceSingleton\"\nimport { makeSchedulePayload } from \"../../services/register\"\n\nexport function ReuploadScheduleDialog({\n  onDialogCloseClicked,\n  open,\n  clickedSchedule,\n  onClickedScheduleNameChanged,\n  currentClickedScheduleName,\n  onActionSuccess,\n  canUpdate,\n  fileUploaded,\n  onFileUploaded,\n  buffer,\n  ...props\n}) {\n  const { callDecoratedRepostService, RepostSnackbar } = useActionSnackbar(\n    \"repost\",\n    httpService.repostSchedule\n  )\n\n  async function onSaveUpdateClicked() {\n    const data = makeSchedulePayload(\n      buffer,\n      [],\n      clickedSchedule.scheduleName,\n      false,\n      clickedSchedule.scheduleId\n    )\n\n    const { ok } = await callDecoratedRepostService(data)\n    if (ok) {\n      //don't need timetable to update UI\n      delete data.timetable\n      onActionSuccess(\"repost\", data)\n    }\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onDialogCloseClicked}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle\n        style={{\n          backgroundColor: \"var(--txt-cl)\",\n        }}\n      >\n        <Typography style={{ fontWeight: \"var(--fw-md)\" }}>\n          Reupload Cycle\n        </Typography>\n      </DialogTitle>\n      <DialogContent className=\"add-new-schedule-dialog\">\n        <RepostSnackbar />\n        {clickedSchedule && (\n          <ScheduleReuploader\n            {...props}\n            onClickedScheduleNameChanged={onClickedScheduleNameChanged}\n            onFileUploaded={onFileUploaded}\n            scheduleName={clickedSchedule.scheduleName}\n            fileUploaded={fileUploaded}\n          />\n        )}\n      </DialogContent>\n      <DialogActions\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          padding: \"0\",\n          backgroundColor: \"var(--txt-cl)\",\n        }}\n      >\n        <button\n          disabled={!canUpdate}\n          onClick={onSaveUpdateClicked}\n          style={{ width: \"max-content\" }}\n        >\n          Save\n        </button>\n        <button onClick={onDialogCloseClicked} style={{ width: \"max-content\" }}>\n          Close\n        </button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState } from \"react\"\nimport { FileUploader, ScheduleNameInput } from \"./register\"\nimport { Grid } from \"@material-ui/core\"\nimport { ActionNotificationDiv } from \"../ActionNotificationDiv\"\n//a good candidate for Redux, since needed by many components, lets just do useState for now\n//snackBar good candidate for a factory function\n\nexport function ScheduleReuploader({\n  onClickedScheduleNameChanged,\n  onFileUploaded,\n  scheduleName,\n  isFileUploaded,\n}) {\n  const [actionStatus, setActionStatus] = useState({\n    action: \"File Upload\",\n    isActionSuccess: isFileUploaded,\n  })\n\n  function onCloseActionStatusDiv() {\n    setActionStatus({ action: null, isActionSuccess: null })\n  }\n\n  return (\n    <Grid\n      container\n      xs={8}\n      md={12}\n      lg={12}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      <ScheduleNameInput\n        label=\"Cycle Name\"\n        onClickedScheduleNameChanged={onClickedScheduleNameChanged}\n        scheduleName={scheduleName}\n      />\n\n      <ActionNotificationDiv\n        actionStatus={actionStatus}\n        onCloseActionStatusDiv={onCloseActionStatusDiv}\n      />\n\n      {scheduleName.length > 0 ? (\n        <FileUploader onFileUploaded={onFileUploaded} />\n      ) : (\n        \"Schedule Name Must Not Be Empty\"\n      )}\n    </Grid>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { ProgrammeOptions } from \"./register\"\nimport { Dialog, DialogActions, DialogTitle, Grid } from \"@material-ui/core\"\nimport { findIndexAndDelete } from \"../../services/register\"\nimport { useActionSnackbar, useFetchSnackbar } from \"../../hooks/register\"\nimport httpService from \"../../services/ProgrammeServiceSingleton\"\n\nexport function PublishScheduleDialog({\n  scheduleId,\n  onDialogCloseClicked,\n  open,\n  onActionSuccess,\n}) {\n  // const [isFetchSuccess, setIsFetchSuccess] = useState(null)\n  const [selectedProgrammeIds, setSelectedProgrammeIds] = useState([])\n  const [programmes, setProgrammes] = useState(null)\n\n  const { setIsFetchSuccess, FetchNotificationDiv } = useFetchSnackbar(\n    \"available programmes\"\n  )\n\n  const {\n    publishActionStatus,\n    callDecoratedPublishService,\n    PublishSnackbar,\n  } = useActionSnackbar(\"publish\", httpService.publishSchedule)\n\n  function onProgrammeChecked(e) {\n    const checkedProgrammeId = parseInt(e.target.value)\n    if (e.target.checked) {\n      setSelectedProgrammeIds([...selectedProgrammeIds, checkedProgrammeId])\n    } else {\n      setSelectedProgrammeIds((selectedProgrammeIds) => {\n        let newArr = [...selectedProgrammeIds]\n        findIndexAndDelete(checkedProgrammeId, newArr)\n        return newArr\n      })\n    }\n  }\n\n  async function onPublishScheduleClicked() {\n    const { ok } = await callDecoratedPublishService(\n      scheduleId,\n      selectedProgrammeIds\n    )\n\n    if (ok) {\n      onActionSuccess(\"publish\", {\n        scheduleId,\n        programmes: getAddedProgrammes(selectedProgrammeIds, programmes),\n      })\n    }\n  }\n\n  function getAddedProgrammes(selectedProgrammeIds, programmes) {\n    return programmes.filter((p) =>\n      selectedProgrammeIds.includes(p.programmeId)\n    )\n  }\n\n  useEffect(() => {\n    async function getAvailableProgrammesToPublish(scheduleId) {\n      const { ok, payload } = await httpService.getAvailableProgrammesToPublish(\n        scheduleId\n      )\n      if (ok) {\n        setIsFetchSuccess(true)\n        setProgrammes(payload)\n        return\n      }\n      setIsFetchSuccess(false)\n    }\n\n    if (open) {\n      getAvailableProgrammesToPublish(scheduleId)\n    }\n  }, [scheduleId, open, setIsFetchSuccess])\n\n  return (\n    <Grid item xs={10} sm={8} md={6}>\n      <Dialog\n        open={open}\n        onClose={onDialogCloseClicked}\n        aria-labelledby=\"form-dialog-title\"\n        style={{ overflow: \"hidden\" }}\n      >\n        <DialogTitle\n          style={{\n            backgroundColor: \"var(--txt-cl)\",\n            fontWeight: \"var(--fw-md)\",\n          }}\n        >\n          Publish Cycle\n        </DialogTitle>\n        <div className=\"publish-schedule-dialog\">\n          {programmes ? (\n            <ProgrammeOptions\n              programmes={programmes}\n              onProgrammeChecked={onProgrammeChecked}\n              label=\"Publish to Team\"\n            />\n          ) : (\n            <FetchNotificationDiv />\n          )}\n          {publishActionStatus.action ? <PublishSnackbar /> : null}\n        </div>\n        <DialogActions\n          style={{\n            justifyContent: \"space-around\",\n            padding: \"0\",\n            backgroundColor: \"var(--txt-cl)\",\n            overflow: \"hidden\",\n          }}\n        >\n          <button\n            disabled={\n              selectedProgrammeIds.length > 0 || !programmes ? false : true\n            }\n            onClick={onPublishScheduleClicked}\n            style={{ width: \"max-content\" }}\n          >\n            Publish\n          </button>\n          <button\n            onClick={onDialogCloseClicked}\n            style={{ width: \"max-content\" }}\n          >\n            Close\n          </button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  )\n}\n","import React from \"react\"\nimport { TextField, makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n  scheduleName: {\n    marginBottom: \"var(--mg-sm)\",\n  },\n  input: {\n    fontFamily: \"var(--ff)\",\n    color: \"#001e18\",\n    marginBottom: \"var(--mg-sm)\",\n  },\n  formLabelRoot: {\n    fontFamily: \"var(--ff)\",\n    color: \"var(--txt-cl)\",\n  },\n  formLabelFocused: {\n    fontFamily: \"var(--ff)\",\n    color: \"var(--txt-cl)\",\n    \"'& label.Mui-focused'\": {\n      fontFamily: \"var(--ff)\",\n      color: \"var(--txt-cl)\",\n    },\n  },\n}))\n\nexport function ScheduleNameInput({\n  onClickedScheduleNameChanged,\n  scheduleName,\n  label,\n}) {\n  const classes = useStyles()\n  return (\n    <TextField\n      label={label}\n      className={classes.scheduleName}\n      onChange={onClickedScheduleNameChanged}\n      value={scheduleName}\n      InputProps={{ className: classes.input }}\n      InputLabelProps={{\n        className: classes.formLabelRoot,\n      }}\n    />\n  )\n}\n","import React, { useState } from \"react\"\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\"\nimport { VpnKey, ExitToApp, TodayOutlined, PeopleAlt } from \"@material-ui/icons\"\n\n//https://reactrouter.com/web/api\nimport { NavBarControl, Footer, PageRoutes } from \"./app/register\"\n\nimport { LearnersPanel } from \"./components/learners/register\"\nimport { SchedulePanel } from \"./components/schedules/register\"\nimport {\n  InstructorLoginPage,\n  InstructorAccountPage,\n} from \"./components/home/register\"\n\nimport { UserAuth, NavHelpers } from \"./services/register\"\n\nconst allLinks = {\n  instructor: [\n    {\n      to: \"/instructor/schedules\",\n      label: \"Schedules\",\n      component: SchedulePanel,\n      isProtected: true,\n      display: true,\n      icon: TodayOutlined,\n    },\n    {\n      to: \"/instructor/learners\",\n      label: \"Learners Panel\",\n      component: LearnersPanel,\n      isProtected: true,\n      display: true,\n      icon: PeopleAlt,\n    },\n    {\n      to: \"/instructor/account\",\n      label: \"Account\",\n      component: InstructorAccountPage,\n      isProtected: true,\n      display: true,\n      icon: VpnKey,\n    },\n    {\n      to: \"/logout\",\n      label: \"Log Out\",\n      component: null,\n      isProtected: true,\n      display: true,\n      icon: ExitToApp,\n    },\n  ],\n  learnerApp: [\n    {\n      to: \"/learner/login\",\n      label: \"Learner Space\",\n      isProtected: false,\n      display: true,\n    },\n  ],\n}\n\nexport function InstructorApp({ onAppChange }) {\n  const [isInstructorLoggedIn, setIsInstructorLoggedIn] = useState(\n    UserAuth.isAuthenticated()\n  )\n\n  const [links, setLinks] = useState(\n    UserAuth.isAuthenticated() ? allLinks.instructor : allLinks.learnerApp\n  )\n\n  function onInstructorLogIn() {\n    setLinks(allLinks.instructor)\n    setIsInstructorLoggedIn(true)\n  }\n\n  //lets see if there's any difference\n  function onInstructorLogOut(e) {\n    console.log(\"log me out!\")\n    UserAuth.clearToken()\n    NavHelpers.setCurrentPage(\"/instructor/login\")\n    setLinks(allLinks.learnerApp)\n    setIsInstructorLoggedIn(false)\n  }\n\n  return (\n    <Router>\n      <NavBarControl\n        links={links}\n        pageTitle=\"Instructor Space\"\n        onLogOut={onInstructorLogOut}\n        onAppChange={onAppChange}\n      />\n      <div className=\"App main\">\n        {isInstructorLoggedIn ? (\n          <Redirect\n            to={\n              NavHelpers.getCurrentPage() !== \"/instructor/login\"\n                ? NavHelpers.getCurrentPage()\n                : \"/instructor/schedules\"\n            }\n          />\n        ) : (\n          <InstructorLoginPage onInstructorLogIn={onInstructorLogIn} />\n        )}\n        <PageRoutes links={links} />\n      </div>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default InstructorApp\n","import React, { useState, useEffect } from \"react\"\n\nimport { PersonalBestsForm, LearnerSearchInput } from \"./register\"\nimport { FetchNotificationDivFactory } from \"../factoryComponent\"\nimport { ActionNotificationDiv } from \"../ActionNotificationDiv\"\n\nimport httpService from \"../../services/LearnerServiceSingleton\"\nimport { shallowEqual } from \"../../utils\"\nimport { NavHelpers } from \"../../services/register\"\n\nexport function LearnersPanel() {\n  NavHelpers.setCurrentPage(\"/instructor/learners\")\n  const [learners, setLearners] = useState([])\n  const [displayedLearners, setDisplayedLearners] = useState([])\n  const [searchPhrase, setSearchPhrase] = useState(\"\")\n  const [selectedLearner, setSelectedLearner] = useState(null)\n  const [canEditAndUpdate, setCanEditAndUpdate] = useState(false)\n  const [actionStatus, setActionStatus] = useState({\n    action: null,\n    isActionSuccess: null,\n  })\n\n  //maybe these can be combined into a useNotification hook?\n  const [isFetchSuccess, setIsFetchSuccess] = useState(null)\n  const FetchLearnersNotificationDiv = FetchNotificationDivFactory(\n    \"learners\",\n    \"Click On A Name\"\n  )\n\n  function onCloseActionStatusDiv(e) {\n    setActionStatus({ action: null, isActionSuccess: null })\n  }\n\n  function filterLearners(learners, phrase) {\n    const processedPhrase = phrase.trim().toLowerCase()\n\n    if (processedPhrase.length === 0) return learners\n\n    return learners.filter(\n      ({ firstName, lastName }) =>\n        firstName.toLowerCase().trim().startsWith(processedPhrase) ||\n        lastName.toLowerCase().trim().startsWith(processedPhrase)\n    )\n  }\n\n  function getLearnerById(id) {\n    //avoid filter if ur searching for just one and all items are unique\n    return learners.find(({ learnerId }) => learnerId === parseInt(id))\n  }\n\n  function onSearchPhraseChanged(e) {\n    const phrase = e.target.value\n\n    //the two operations are not synchronous!\n    setSearchPhrase(e.target.value)\n    //dont set it using the searchPhrase because React may not have updated it with the new value\n    setDisplayedLearners(filterLearners(learners, phrase))\n  }\n\n  function onLearnerItemClicked(e) {\n    const selected = getLearnerById(e.target.getAttribute(\"learnerId\"))\n    setSelectedLearner(selected)\n  }\n\n  function onPersonalBestsInputChange(e) {\n    const changedField = e.target.getAttribute(\"name\")\n    const newValue = e.target.value\n\n    //console.log(e.target.getAttribute(\"name\"))\n\n    setSelectedLearner((selectedLearner) => {\n      let newSelectedLearner = { ...selectedLearner }\n      newSelectedLearner[changedField] = newValue\n      return newSelectedLearner\n    })\n  }\n\n  //FIXME: this may break if user's currently filtering!\n  function updateUILearnerList(updatedLearnerIndex, action = \"UPDATE\") {\n    const newLearnersList = [...learners]\n    switch (action) {\n      default:\n        newLearnersList[updatedLearnerIndex] = selectedLearner\n        //updated the list because name can be updated\n        setLearners(newLearnersList)\n        setDisplayedLearners(\n          filterLearners(newLearnersList, `${selectedLearner.firstName}`)\n        )\n        setSearchPhrase(`${selectedLearner.firstName}`)\n        break\n      case \"DELETE\":\n        //remove the deleted learner\n        newLearnersList.splice(updatedLearnerIndex, 1)\n        //should go back to the full list after deleting\n        setDisplayedLearners(newLearnersList)\n        setLearners(newLearnersList)\n        //reset form\n        setSelectedLearner(null)\n        //reset searchPhrase\n        setSearchPhrase(\"\")\n        break\n    }\n  }\n\n  function getUpdatedLearnerIndex(learners, selectedLearner) {\n    return learners.findIndex(({ learnerId }) => {\n      return learnerId === selectedLearner.learnerId\n    })\n  }\n\n  async function onUpdatePersonalBests(e) {\n    const updatedLearnerIndex = getUpdatedLearnerIndex(\n      learners,\n      selectedLearner\n    )\n\n    if (\n      !window.confirm(\n        `Are you sure you want to update ${selectedLearner.firstName}'s record?`\n      )\n    ) {\n      setSelectedLearner(null)\n      setDisplayedLearners(learners)\n      setSearchPhrase(\"\")\n      return\n    } else {\n      //check if the selectedLearner actually changes\n      if (shallowEqual(learners[updatedLearnerIndex], selectedLearner)) {\n        console.log(\"No need to rerender or update!\")\n        return\n      }\n\n      setActionStatus({ action: \"update\", isActionSuccess: null })\n\n      const { ok } = await httpService.updateLearner(selectedLearner)\n\n      if (ok) {\n        //...when should you update?\n        updateUILearnerList(updatedLearnerIndex)\n\n        setActionStatus({ action: \"update\", isActionSuccess: true })\n      } else {\n        console.log(\"Updating failed!\", ok)\n        //refill the form with the old information\n        setSelectedLearner(learners[updatedLearnerIndex])\n        setSearchPhrase(selectedLearner.firstName)\n\n        setActionStatus({ action: \"update\", isActionSuccess: false })\n      }\n    }\n  }\n\n  function enableEditAndUpdate() {\n    setCanEditAndUpdate(!canEditAndUpdate)\n  }\n\n  async function onDeleteLearner(e) {\n    if (\n      !window.confirm(\n        `Are you sure you want to delete ${selectedLearner.firstName}'s record?`\n      )\n    ) {\n      setCanEditAndUpdate(false)\n      return\n    }\n\n    setActionStatus({ action: \"delete\", isActionSuccess: null })\n\n    const { ok } = await httpService.deleteLearner(selectedLearner.learnerId)\n\n    if (ok) {\n      setActionStatus({ action: \"delete\", isActionSuccess: true })\n      const updatedLearnerIndex = getUpdatedLearnerIndex(\n        learners,\n        selectedLearner\n      )\n      updateUILearnerList(updatedLearnerIndex, \"DELETE\")\n      console.log(\"Deleting ... Success!\")\n    } else {\n      setActionStatus({ action: \"delete\", isActionSuccess: false })\n      console.log(\"Deleting failed!\")\n    }\n  }\n\n  useEffect(() => {\n    async function fetchLearners() {\n      const { ok, payload } = await httpService.fetchLearners()\n\n      if (ok) {\n        //the two operations are not synchronous!\n        setLearners(payload)\n        setDisplayedLearners(payload)\n        setIsFetchSuccess(true)\n      } else {\n        setIsFetchSuccess(false)\n      }\n    }\n    fetchLearners()\n  }, [])\n\n  return (\n    <>\n      <ActionNotificationDiv\n        actionStatus={actionStatus}\n        onCloseActionStatusDiv={onCloseActionStatusDiv}\n      />\n      <div className=\"learnerPanelWrapper\" style={{ display: \"flex\" }}>\n        {isFetchSuccess ? (\n          <LearnerSearchInput\n            searchPhrase={searchPhrase}\n            onSearchPhraseChanged={onSearchPhraseChanged}\n            learners={learners}\n            displayedLearners={displayedLearners}\n            onLearnerItemClicked={onLearnerItemClicked}\n          />\n        ) : (\n          <FetchLearnersNotificationDiv isFetchSuccess={isFetchSuccess} />\n        )}\n        {selectedLearner ? (\n          <PersonalBestsForm\n            selectedLearner={selectedLearner}\n            onPersonalBestsInputChange={onPersonalBestsInputChange}\n            onUpdatePersonalBests={onUpdatePersonalBests}\n            canEditAndUpdate={canEditAndUpdate}\n            enableEditAndUpdate={enableEditAndUpdate}\n            onDeleteLearner={onDeleteLearner}\n          />\n        ) : (\n          <FetchLearnersNotificationDiv isFetchSuccess={isFetchSuccess} />\n        )}\n      </div>\n    </>\n  )\n}\n","import React from \"react\"\nimport { NavHelpers } from \"../../services/register\"\n\nexport function InstructorAccountPage({ onLogOutClicked }) {\n  NavHelpers.setCurrentPage(\"/instructor/account\")\n  return (\n    <>\n      <h1>Under Construction</h1>\n    </>\n  )\n}\n","import React from \"react\"\nimport { LearnerApp, InstructorApp } from \"./register\"\n\nexport function App({ currentPage, onAppChange }) {\n  return currentPage.includes(\"/instructor\") ? (\n    <InstructorApp onAppChange={onAppChange} />\n  ) : (\n    <LearnerApp onAppChange={onAppChange} />\n  )\n}\n","import React, { useState } from \"react\"\nimport { App } from \"./register\"\nimport { NavHelpers } from \"./services/register\"\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"],\n  },\n  palette: {\n    primary: { main: \"#028090\" },\n    secondary: { main: \"#f0f3bd\" },\n  },\n})\n\nexport default function AppControl() {\n  //FIXME: this will always get back to instructor app and log the user in! Should have separate auth for different user. It could also be the routing as well, since refreshing instructor app pages work fine\n  const [currentPage, setCurrentPage] = useState(\n    NavHelpers.getCurrentPage() ? NavHelpers.getCurrentPage() : \"/learner/login\"\n  )\n\n  function onAppChange(e) {\n    const targetPage = e.target.getAttribute(\"to\")\n    console.log(targetPage)\n    NavHelpers.currentApp = targetPage\n    NavHelpers.setCurrentPage(targetPage)\n    setCurrentPage(targetPage)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <App currentPage={currentPage} onAppChange={onAppChange} />\n    </ThemeProvider>\n  )\n}\n\n//if there is no current page, redirects to learner's login\n//learners should be redirect to schedule page after login\n//refreshing should reload the current page\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport learnerSchedulesReducer from \"../reducers/learnerSchedulesSlice\"\nimport learnerPbsReducer from \"../reducers/learnerPbsSlice\"\nimport dailyExercisesReducer from \"../reducers/dailyExercisesSlice\"\nimport practiceBestsReducer from \"../reducers/practiceBestsSlice\"\n\nexport default configureStore({\n  reducer: {\n    learnerSchedules: learnerSchedulesReducer,\n    learnerPbs: learnerPbsReducer,\n    dailyExercises: dailyExercisesReducer,\n    practiceBests: practiceBestsReducer,\n  },\n})\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./style/resetBrowserStyle.css\"\nimport \"./style/style.css\"\n\n// import App from \"./App\"\nimport AppControl from \"./AppControl\"\nimport store from \"./app/store\"\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppControl />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n//Use it to access match.params of the current <Route>.\n\n// import React from \"react\"\n// import ReactDOM from \"react-dom\"\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   useParams,\n// } from \"react-router-dom\"\n\n// function BlogPost() {\n//   let { slug } = useParams()\n//   return <div>Now showing post {slug}</div>\n// }\n\n// ReactDOM.render(\n//   <Router>\n//     <Switch>\n//       <Route exact path=\"/\">\n//         {() => <div>Home</div>}\n//       </Route>\n//       <Route path=\"/blog/:slug\" component={BlogPost} />\n//     </Switch>\n//   </Router>,\n//   document.getElementById(\"root\")\n// )\n"],"sourceRoot":""}